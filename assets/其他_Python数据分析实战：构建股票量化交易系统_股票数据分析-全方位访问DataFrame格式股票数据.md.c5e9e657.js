import{_ as s,c as a,o as n,d as l}from"./app.e5528619.js";const y=JSON.parse('{"title":"\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEDataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u524D\u8A00","slug":"\u524D\u8A00","link":"#\u524D\u8A00","children":[]},{"level":2,"title":"\u884C/\u5217\u7D22\u5F15\u8BBF\u95EE","slug":"\u884C-\u5217\u7D22\u5F15\u8BBF\u95EE","link":"#\u884C-\u5217\u7D22\u5F15\u8BBF\u95EE","children":[]},{"level":2,"title":"\u884C/\u5217\u5143\u7D20\u8BBF\u95EE","slug":"\u884C-\u5217\u5143\u7D20\u8BBF\u95EE","link":"#\u884C-\u5217\u5143\u7D20\u8BBF\u95EE","children":[]},{"level":2,"title":"\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE","slug":"\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE","link":"#\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE","children":[]},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3","link":"#\u603B\u7ED3","children":[]}],"relativePath":"\u5176\u4ED6/Python\u6570\u636E\u5206\u6790\u5B9E\u6218\uFF1A\u6784\u5EFA\u80A1\u7968\u91CF\u5316\u4EA4\u6613\u7CFB\u7EDF/\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEDataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E.md"}'),p={name:"\u5176\u4ED6/Python\u6570\u636E\u5206\u6790\u5B9E\u6218\uFF1A\u6784\u5EFA\u80A1\u7968\u91CF\u5316\u4EA4\u6613\u7CFB\u7EDF/\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEDataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E.md"},e=l(`<h1 id="\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEdataframe\u683C\u5F0F\u80A1\u7968\u6570\u636E" tabindex="-1">\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEDataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E <a class="header-anchor" href="#\u80A1\u7968\u6570\u636E\u5206\u6790-\u5168\u65B9\u4F4D\u8BBF\u95EEdataframe\u683C\u5F0F\u80A1\u7968\u6570\u636E" aria-hidden="true">#</a></h1><hr><h1 id="\u5168\u65B9\u4F4D\u8BBF\u95EEdataframe\u683C\u5F0F\u80A1\u7968\u6570\u636E" tabindex="-1">\u5168\u65B9\u4F4D\u8BBF\u95EEDataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E <a class="header-anchor" href="#\u5168\u65B9\u4F4D\u8BBF\u95EEdataframe\u683C\u5F0F\u80A1\u7968\u6570\u636E" aria-hidden="true">#</a></h1><h2 id="\u524D\u8A00" tabindex="-1">\u524D\u8A00 <a class="header-anchor" href="#\u524D\u8A00" aria-hidden="true">#</a></h2><p>\u5728\u91CF\u5316\u4EA4\u6613\u7CFB\u7EDF\u5F00\u53D1\u4E2D\u80A1\u7968\u4EA4\u6613\u6570\u636E\u4E3B\u8981\u662F\u4EE5\u8868\u683C\u578B\u7684DataFrame\u6570\u636E\u7ED3\u6784\u5B58\u50A8\uFF0CDataFrame\u6570\u636E\u7ED3\u6784\u7684\u5F62\u5F0F\u5305\u62EC\u4E86\u884C\u7D22\u5F15\u548C\u5217\u7D22\u5F15\uFF0C\u4EE5\u53CA\u884C\u5217\u7D22\u5F15\u5BF9\u5E94\u4E0B\u7684\u5143\u7D20\u3002\u6709\u4E86\u80A1\u7968\u4EA4\u6613\u6570\u636E\u540E\uFF0C\u5168\u65B9\u4F4D\u3001\u51C6\u786E\u5730\u4ECEDataFrame\u683C\u5F0F\u6570\u636E\u4E2D\u8BBF\u95EE\u5230\u6211\u4EEC\u6240\u9700\u8981\u7684\u6570\u636E\u662F\u4E0B\u4E00\u6B65\u5BF9\u8FD9\u4E9B\u6570\u636E\u8FDB\u884C\u6E05\u6D17\u3001\u5904\u7406\u3001\u5EFA\u6A21\u7B49\u4E00\u7CFB\u5217\u7684\u52A8\u4F5C\u7684\u524D\u63D0\u6761\u4EF6\u3002\u90A3\u4E48\u672C\u5C0F\u8282\u91CD\u70B9\u8BB2\u89E3\u4E0B\u5168\u65B9\u4F4D\u8BBF\u95EE\u5230DataFrame\u683C\u5F0F\u80A1\u7968\u6570\u636E\u7684\u65B9\u6CD5\u3002</p><h2 id="\u884C-\u5217\u7D22\u5F15\u8BBF\u95EE" tabindex="-1">\u884C/\u5217\u7D22\u5F15\u8BBF\u95EE <a class="header-anchor" href="#\u884C-\u5217\u7D22\u5F15\u8BBF\u95EE" aria-hidden="true">#</a></h2><p>\u9996\u5148\u6211\u4EEC\u901A\u8FC7<code>pandas-datareade</code>\u6A21\u5757<code>data.DataReader()</code>\u65B9\u6CD5\u83B7\u53D6\u5230\u4E0A\u8BC1\u6307\u65702018\u5E741\u67081\u65E5\u81F32\u67081\u65E5\u7684\u4EA4\u6613\u6570\u636E\uFF0C\u4EE5\u4F5C\u4E3A\u6211\u4EEC\u672C\u5C0F\u8282\u8BBF\u95EE\u7684\u4F8B\u7A0B\u6570\u636E\uFF0C\u6253\u5370\u67E5\u770B\u4EA4\u6613\u6570\u636E\u7684\u524D10\u884C\u683C\u5F0F\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># \u83B7\u53D6\u4E0A\u8BC1\u6307\u6570\u4EA4\u6613\u6570\u636E pandas-datareade\u6A21\u5757data.DataReader()\u65B9\u6CD5</span></span>
<span class="line"><span style="color:#A6ACCD;">df_stockload = web.DataReader(&quot;000001.SS&quot;, &quot;yahoo&quot;, datetime.datetime(2018, 1, 1), datetime.datetime(2018, 2, 1))</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">df_stockload.head(10)  # \u67E5\u770B\u524D\u51E0\u884C</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">			High     Low    Open   Close  Volume  Adj Close</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                                                         </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0  3314.0  3348.3  202300     3348.3</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-03  3379.9  3345.3  3347.7  3369.1  213800     3369.1</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04  3392.8  3365.3  3371.0  3385.7  207000     3385.7</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-05  3402.1  3380.2  3386.5  3391.8  213100     3391.8</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-08  3412.7  3384.6  3391.6  3409.5  236200     3409.5</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-09  3417.2  3403.6  3406.1  3413.9  191500     3413.9</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-10  3430.2  3398.8  3414.1  3421.8  209100     3421.8</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-11  3426.5  3405.6  3415.6  3425.3  173800     3425.3</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-12  3435.4  3418.0  3423.9  3428.9  174100     3428.9</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-15  3442.5  3402.3  3429.0  3410.5  232000     3410.5</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5728pandas\u4E2D<code>DataFrame.index</code>\u53EF\u4EE5\u8BBF\u95EEDataFrame\u5168\u90E8\u7684\u884C\u7D22\u5F15\uFF0C<code>DataFrame.columns</code>\u53EF\u4EE5\u8BBF\u95EEDataFrame\u5168\u90E8\u7684\u5217\u7D22\u5F15\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u7528\u4F8B\u7A0B\u6765\u5206\u522B\u5C55\u793A\u4E0B\u8BBF\u95EE\u884C/\u5217\u7D22\u5F15\u7684\u65B9\u6CD5\u3002</p><p>\u6211\u4EEC\u7528<code>DataFrame.index</code>\u67E5\u770B\u4EA4\u6613\u6570\u636E\u7684\u884C\u7D22\u5F15\u57FA\u672C\u4FE1\u606F\uFF0C\u9700\u6CE8\u610F\u5230\u7684\u662F<code>dtype</code>\u4E3A&#39;datetime64[ns]&#39;\uFF0Cname\u4E3A&#39;Date&#39;\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.index)  # \u67E5\u770B\u7D22\u5F15</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">DatetimeIndex([&#39;2018-01-02&#39;, &#39;2018-01-03&#39;, &#39;2018-01-04&#39;, &#39;2018-01-05&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">               &#39;2018-01-08&#39;, &#39;2018-01-09&#39;, &#39;2018-01-10&#39;, &#39;2018-01-11&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">               &#39;2018-01-12&#39;, &#39;2018-01-15&#39;, &#39;2018-01-16&#39;, &#39;2018-01-17&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">               &#39;2018-01-18&#39;, &#39;2018-01-19&#39;, &#39;2018-01-22&#39;, &#39;2018-01-23&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">               &#39;2018-01-24&#39;, &#39;2018-01-25&#39;, &#39;2018-01-26&#39;, &#39;2018-01-29&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">               &#39;2018-01-30&#39;, &#39;2018-01-31&#39;, &#39;2018-02-01&#39;, &#39;2018-02-02&#39;],</span></span>
<span class="line"><span style="color:#A6ACCD;">              dtype=&#39;datetime64[ns]&#39;, name=&#39;Date&#39;, freq=None)</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;        </span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6211\u4EEC\u7528<code>DataFrame.columns</code>\u67E5\u770B\u4EA4\u6613\u6570\u636E\u7684\u5217\u7D22\u5F15\u57FA\u672C\u4FE1\u606F\uFF0C\u9700\u6CE8\u610F\u5230\u7684\u662F<code>dtype</code>\u4E3A&#39;object&#39;\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.columns)  # \u67E5\u770B\u5217\u540D</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Index([&#39;High&#39;, &#39;Low&#39;, &#39;Open&#39;, &#39;Close&#39;, &#39;Volume&#39;, &#39;Adj Close&#39;], dtype=&#39;object&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6211\u4EEC\u7528<code>DataFrame.axes</code>\u67E5\u770B\u4EA4\u6613\u6570\u636E\u884C\u548C\u5217\u7684\u8F74\u6807\u7B7E\u57FA\u672C\u4FE1\u606F<code>\uFF0CDataFrame.axes</code>\u7B49\u4EF7\u4E8E<code>DataFrame.index</code>\u7ED3<code>\u5408DataFrame.columns</code>\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.axes)  # \u67E5\u770B\u884C\u548C\u5217\u7684\u8F74\u6807\u7B7E \u7B49\u4EF7\u4E8Edf_stockload.index\u548Cdf_stockload.columns</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Index([&#39;2018-02-01&#39;, &#39;2018-01-31&#39;, &#39;2018-01-30&#39;, &#39;2018-01-29&#39;, &#39;2018-01-26&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &#39;2018-01-25&#39;, &#39;2018-01-24&#39;, &#39;2018-01-23&#39;, &#39;2018-01-22&#39;, &#39;2018-01-19&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &#39;2018-01-18&#39;, &#39;2018-01-17&#39;, &#39;2018-01-16&#39;, &#39;2018-01-15&#39;, &#39;2018-01-12&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &#39;2018-01-11&#39;, &#39;2018-01-10&#39;, &#39;2018-01-09&#39;, &#39;2018-01-08&#39;, &#39;2018-01-05&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &#39;2018-01-04&#39;, &#39;2018-01-03&#39;, &#39;2018-01-02&#39;],</span></span>
<span class="line"><span style="color:#A6ACCD;">      dtype=&#39;object&#39;, name=&#39;date&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">Index([&#39;open&#39;, &#39;high&#39;, &#39;close&#39;, &#39;low&#39;, &#39;volume&#39;, &#39;price_change&#39;, &#39;p_change&#39;,</span></span>
<span class="line"><span style="color:#A6ACCD;">       &#39;ma5&#39;, &#39;ma10&#39;, &#39;ma20&#39;, &#39;v_ma5&#39;, &#39;v_ma10&#39;, &#39;v_ma20&#39;],</span></span>
<span class="line"><span style="color:#A6ACCD;">      dtype=&#39;object&#39;)</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u884C-\u5217\u5143\u7D20\u8BBF\u95EE" tabindex="-1">\u884C/\u5217\u5143\u7D20\u8BBF\u95EE <a class="header-anchor" href="#\u884C-\u5217\u5143\u7D20\u8BBF\u95EE" aria-hidden="true">#</a></h2><p>\u4E00\u822C\u800C\u8A00\uFF0C<code>DataFrame.values</code>\u53EF\u4EE5\u8BBF\u95EEDataFrame\u5168\u90E8\u5143\u7D20\u6570\u503C\uFF0C\u4EE5<code>numpy.ndarray</code>\u6570\u636E\u7C7B\u578B\u8FD4\u56DE\uFF0C\u4F8B\u7A0B\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.values) # \u8BBF\u95EE\u5168\u90E8\u5143\u7D20\u6570\u503C</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">[[  3349.05297852   3314.03100586   3314.03100586   3348.32592773</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">1. 3348.32592773]</span></span>
<span class="line"><span style="color:#A6ACCD;">   [  3379.91503906   3345.2890625    3347.74291992   3369.10791016</span></span>
<span class="line"><span style="color:#A6ACCD;">2. 3369.10791016]</span></span>
<span class="line"><span style="color:#A6ACCD;">   ......</span></span>
<span class="line"><span style="color:#A6ACCD;">   [  3495.09301758   3424.41894531   3478.66992188   3446.97998047</span></span>
<span class="line"><span style="color:#A6ACCD;">3. 3446.97998047]</span></span>
<span class="line"><span style="color:#A6ACCD;">   [  3463.1640625    3388.86010742   3419.22509766   3462.08105469</span></span>
<span class="line"><span style="color:#A6ACCD;">4. 3462.08105469]]</span></span>
<span class="line"><span style="color:#A6ACCD;">   &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(type(df_stockload.values))  </span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;class &#39;numpy.ndarray&#39;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6709\u65F6\u5019\u6211\u4EEC\u4E0D\u9700\u8981\u9009\u53D6\u5168\u90E8\u7684\u5143\u7D20\uFF0C\u800C\u53EA\u9700\u8981\u9009\u53D6\u67D0\u4E00\u884C\u3001\u67D0\u4E00\u5217\u3001\u6216\u662F\u67D0\u51E0\u4E2A\u5143\u7D20\uFF0C\u90A3\u600E\u4E48\u529E\u5462\uFF1F\u540C\u5B66\u4EEC\u5927\u53EF\u653E\u5FC3\uFF0Cpandas\u63D0\u4F9B\u4E86\u5404\u79CD\u4E30\u5BCC\u7684\u65B9\u6CD5\u6EE1\u8DB3\u6211\u4EEC\u7684\u8981\u6C42\u3002</p><p>\u5047\u5982\u6211\u4EEC\u8981\u8BBF\u95EEDataFrame\u7684\u67D0\u5217\u5185\u5BB9\uFF0C\u53EF\u4EE5\u901A\u8FC7\u7C7B\u4F3C\u5B57\u5178\u6807\u8BB0\u7684\u65B9\u5F0F\u6216\u5C5E\u6027\u7684\u65B9\u5F0F\uFF0C\u6307\u5B9A\u5217\u7D22\u5F15\u6765\u8BBF\u95EEDataFrame\u7684\u67D0\u5217\u5185\u5BB9\uFF0C\u6BD4\u5982<code>DataFrame[&#39;Open&#39;]</code>\u6216\u662F<code>DataFrame.Open</code>\u65B9\u5F0F\u8BBF\u95EE&#39;Open&#39;\u5217\u7684\u5143\u7D20\uFF0C\u8FD4\u56DE\u5F97\u5230\u7684&#39;Open&#39;\u5217\u5143\u7D20\u5176\u5B9E\u662FSeries\u6570\u636E\u7ED3\u6784\uFF0C\u6240\u4EE5\u6211\u4EEC\u4E5F\u53EF\u4EE5\u628A DataFrame \u770B\u6210\u662F\u5171\u4EAB\u540C\u4E00\u4E2A index \u7684 Series \u6570\u636E\u7ED3\u6784\u7684\u96C6\u5408\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload[&#39;Open&#39;]) #print(df_stockload.Open)</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Date</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02    3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-03    3347.7</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04    3371.0</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-05    3386.5</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-08    3391.6</span></span>
<span class="line"><span style="color:#A6ACCD;">               ...  </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-29    3563.6</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-30    3511.5</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-31    3470.5</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-02-01    3478.7</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-02-02    3419.2</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: Open, Length: 24, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">print(type(df_stockload[&#39;Open&#39;])) #\u67E5\u770B\u5217\u7C7B\u578B</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;class &#39;pandas.core.series.Series&#39;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5047\u5982\u6211\u4EEC\u8981\u8BBF\u95EE\u67D0\u4E00\u884C\u5185\u5BB9\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528\u5207\u7247\u7684\u65B9\u6CD5\uFF0C\u6BD4\u5982\u8BBF\u95EE\u4ECE\u7D22\u5F150\u5F00\u59CB\u7684\u7B2C\u4E00\u884C\u5143\u7D20\uFF0C\u6211\u4EEC\u4F7F\u7528<code>DataFrame[0:1]</code>\u65B9\u5F0F\uFF0C\u8FD4\u56DE\u5F97\u5230\u7684\u5143\u7D20\u662FDataFrame\u6570\u636E\u7ED3\u6784\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload[0:1])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High     Low    Open   Close  Volume  Adj Close</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                                                         </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0  3314.0  3348.3  202300     3348.3</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">print(type(df_stockload[0:1])) #\u67E5\u770B\u884C\u7C7B\u578B</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE" tabindex="-1">\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE <a class="header-anchor" href="#\u5143\u7D20\u7EA7\u7684\u8BBF\u95EE" aria-hidden="true">#</a></h2><p>\u5047\u5982\u6211\u4EEC\u8981\u8BBF\u95EEDataFrame\u4E2D\u67D0\u51E0\u4E2A\u5143\u7D20\u65F6\uFF0C\u53EF\u4EE5\u4F7F\u7528Pandas\u63D0\u4F9B\u7684\u8BBF\u95EEDataFrame\u5143\u7D20\u7EA7\u7684\u65B9\u6CD5\uFF0C\u5206\u522B\u662F<code>DataFrame.loc</code>\u3001<code>DataFrame.iloc</code>\u548C<code>DataFrame.ix</code>\uFF0C\u8FD9\u4E09\u4E2A\u65B9\u6CD5\u7684\u4F7F\u7528\u6BD4\u8F83\u5BB9\u6613\u6DF7\u6DC6\uFF0C\u6211\u4EEC\u5177\u4F53\u6765\u8BB2\u89E3\u4E0B\u5B83\u4EEC\u7684\u4F7F\u7528\u65B9\u6CD5\u3002</p><p><code>loc</code>\u662F\u901A\u8FC7\u6807\u7B7E\u65B9\u5F0F\u9009\u53D6\u6570\u636E\uFF0C<code>iloc</code>\u662F\u901A\u8FC7\u4F4D\u7F6E\u65B9\u5F0F\u9009\u53D6\u6570\u636E\uFF0C<code>ix</code>\u5219\u662F\u7ED3\u5408loc\u548Ciloc\u7684\u7279\u70B9\uFF0C\u91C7\u7528\u6DF7\u5408\u6807\u7B7E\u548C\u4F4D\u7F6E\u7684\u65B9\u5F0F\u8BBF\u95EE\u5143\u7D20\u3002</p><p><code>loc</code>\u7684\u9009\u53D6\u89C4\u5219\uFF1A\u901A\u8FC7\u884C\u548C\u5217\u6807\u7B7E\u7EC4\u5408\u7684\u65B9\u5F0F\u6765\u9009\u62E9\u6570\u636E\uFF0C\u4EE5\u9017\u53F7\u6765\u533A\u5206\u884C\u548C\u5217\u7684\u6307\u5B9A\uFF0C\u524D\u534A\u90E8\u5206\u53C2\u6570\u4E3A\u6307\u5B9A\u884C\u6807\u7B7E\uFF0C\u540E\u534A\u90E8\u5206\u53C2\u6570\u6307\u5B9A\u4E3A\u5217\u6807\u7B7E\uFF0C\u5192\u53F7\u6307\u5B9A\u4E86\u884C\u6216\u8005\u5217\u9009\u53D6\u7684\u8303\u56F4\u3002\u6BD4\u5982<code>DataFrame.loc[&#39;2018-01-02&#39;]</code>\u8BBF\u95EE\u5230&#39;2018-01-02&#39;\u8FD9\u4E00\u884C\uFF0C\u6240\u6709\u5217\u7684\u5143\u7D20\u3002<code>DataFrame.loc[&#39;2018-01-02&#39;,[&#39;High&#39;,&#39;Low&#39;]]</code>\u9009\u53D6\u4E86&#39;2018-01-02&#39;\u884C\u5BF9\u5E94\u7684&#39;High&#39;,&#39;Low&#39;\u8FD9\u4E24\u5217\u7684\u5143\u7D20\u5185\u5BB9\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.loc[&#39;2018-01-02&#39;])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">High           3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">Low            3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">Open           3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">Close          3348.3</span></span>
<span class="line"><span style="color:#A6ACCD;">Volume       202300.0</span></span>
<span class="line"><span style="color:#A6ACCD;">Adj Close      3348.3</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: 2018-01-02 00:00:00, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(df_stockload.loc[&#39;2018-01-02&#39;,[&#39;High&#39;,&#39;Low&#39;]])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">High    3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">Low     3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: 2018-01-02 00:00:00, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><code>iloc</code>\u7684\u9009\u53D6\u89C4\u5219\uFF1A\u901A\u8FC7\u884C\u548C\u5217\u4F4D\u7F6E\u7EC4\u5408\u7684\u65B9\u5F0F\u6765\u9009\u62E9\u6570\u636E\uFF0C\u6BD4\u5982<code>DataFrame.iloc[0:2]</code>\u9009\u53D6\u4E86\u524D\u4E24\u884C\uFF0C\u6240\u6709\u5217\u5BF9\u5E94\u7684\u5143\u7D20\u3002<code>DataFrame.iloc[0:2,0:1]</code>\u9009\u53D6\u4E86\u524D\u4E24\u884C\uFF0C\u7B2C\u4E00\u5217\u5BF9\u5E94\u7684\u5143\u7D20\u3002\u66F4\u65B9\u4FBF\u7684\u662F\u6211\u4EEC\u9664\u4E86\u6307\u5B9A\u67D0\u4E2A\u8303\u56F4\u65B9\u5F0F\u9009\u53D6\u5916\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u7531\u9009\u53D6\u884C\u548C\u5217\u7684\u4F4D\u7F6E\u6240\u5BF9\u5E94\u7684\u6570\u636E\u5143\u7D20\uFF0C\u6BD4\u5982<code>DataFrame.iloc[[0,2],[0,1]]</code>\u8BBF\u95EE\u5230\u4E86\u7B2C0\u884C\u548C\u7B2C2\u884C\uFF0C\u7B2C\u4E00\u5217\u548C\u7B2C\u4E8C\u5217\u5BF9\u5E94\u7684\u5143\u7D20\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.iloc[0:2,0:1])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High</span></span>
<span class="line"><span style="color:#A6ACCD;">Date              </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-03  3379.9</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(df_stockload.iloc[0:2])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High     Low    Open   Close  Volume  Adj Close</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                                                         </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0  3314.0  3348.3  202300     3348.3</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-03  3379.9  3345.3  3347.7  3369.1  213800     3369.1</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(df_stockload.iloc[[0,2],[0,1]])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High     Low</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                      </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04  3392.8  3365.3</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5176\u5B9E<code>ix</code>\u662F\u66F4\u7075\u6D3B\u7684\u8BBF\u95EEdataframe\u5143\u7D20\u7684\u65B9\u6CD5\uFF0C\u4E0D\u8FC7ix\u65B9\u6CD5\u5DF2\u7ECF\u88ABPanads\u5F03\u7528\u4E86\uFF0C\u4F7F\u7528\u65F6\u89E3\u91CA\u5668\u4F1A\u63D0\u793AIX Indexer is Deprecated\u8B66\u544A\uFF0C\u6211\u4EEC\u53EA\u80FD\u4F7F\u7528loc\u548Ciloc\u5B8C\u6210\u6570\u636E\u9009\u53D6\u3002</p><p><a href="http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html" target="_blank" rel="noreferrer">[\u5B98\u7F51\u58F0\u660E\u5185\u5BB9]:</a></p><blockquote><p>Warning:Starting in 0.20.0, the .ix indexer is deprecated, in favor of the more strict .iloc and .loc indexers.\uFF08\u8B66\u544A\uFF1A\u4ECE0.20.0\u7248\u672C\u5F00\u59CB\uFF0Cix\u7D22\u5F15\u9009\u53D6\u88AB\u5F03\u7528\u4E86\uFF0C\u7528\u66F4\u4E25\u683C\u7684 .iloc\u548C.loc\u4EE3\u66FF\uFF09</p><p>.ix offers a lot of magic on the inference of what the user wants to do. To wit, .ix can decide to index positionally OR via labels depending on the data type of the index. This has caused quite a bit of user confusion over the years.</p><p>The recommended methods of indexing are:</p><ul><li>.loc if you want to label index.</li><li>.iloc if you want to positionally index.</li></ul><p>\u7531\u4E8Eix\u53EF\u4EE5\u884C\u7D22\u5F15\u548C\u5217\u7D22\u5F15\u5206\u522B\u7531\u6807\u7B7E\u548C\u4F4D\u7F6E\u6DF7\u5408\u65B9\u5F0F\u6765\u8BBF\u95EE\u5143\u7D20\uFF0C\u4F1A\u5F15\u8D77\u4E86\u4F7F\u7528\u8005\u5F97\u56F0\u60D1\uFF0C\u6240\u4EE5\u5EFA\u8BAE\u4F7F\u7528loc\u6216iloc\u66F4\u4E25\u683C\u7684\u65B9\u5F0F\u9009\u53D6\u5143\u7D20\u3002\u5F53\u884C\u7D22\u5F15\u548C\u5217\u7D22\u5F15\u5E76\u4E0D\u7EDF\u4E00\u4E3A\u6807\u7B7E\u6216\u8005\u4F4D\u7F6E\u65F6\uFF0C\u5219\u9700\u8981\u5C06\u5176\u4E2D\u4E00\u4E2A\u8FDB\u884C\u8F6C\u6362\uFF0C\u624D\u53EF\u4EE5\u4F7F\u7528loc\u6216iloc\u65B9\u6CD5\u3002</p></blockquote><p>\u5982\u679C\u4ECE\u201CHigh\u201D\u5217\u7D22\u5F15\u4E2D\u83B7\u53D6\u7B2C0\u4E2A\u548C\u7B2C2\u4E2A\u5143\u7D20\uFF0C\u4EE5\u5F80\u4F7F\u7528ix\u7684\u65B9\u6CD5\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.ix[[0, 2], &#39;High&#39;])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Date</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02    3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04    3392.8</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: High, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F53\u4F7F\u7528<code>loc</code>\u524D\uFF0C\u9700\u8981\u5C06\u4F4D\u7F6E\u5F62\u5F0F\u7684\u884C\u7D22\u5F15\u8F6C\u6362\u4E3A\u6807\u7B7E\u5F62\u5F0F\u7684\u884C\u7D22\u5F15\u540E\uFF0C\u518D\u4F7F\u7528<code>loc</code>\u65B9\u6CD5\uFF0C\u5982<code>DataFrame.index[[0, 2]]</code>\u5C06\u4F4D\u7F6E&#39;0, 2&#39;\u8F6C\u6362\u4E3A\u6807\u7B7E&#39;2018-01-02&#39;, &#39;2018-01-04&#39;\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.loc[df_stockload.index[[0, 2]], &#39;High&#39;])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Date</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02    3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04    3392.8</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: High, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(df_stockload.index[[0, 2]])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">DatetimeIndex([&#39;2018-01-02&#39;, &#39;2018-01-04&#39;], dtype=&#39;datetime64[ns]&#39;, name=&#39;Date&#39;, freq=None)</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F53\u4F7F\u7528<code>iloc</code>\u524D\uFF0C\u9700\u8981\u5C06\u6807\u7B7E\u5F62\u5F0F\u7684\u5217\u7D22\u5F15\u8F6C\u6362\u4E3A\u4F4D\u7F6E\u5F62\u5F0F\u7684\u5217\u7D22\u5F15\uFF0C\u518D\u4F7F\u7528<code>iloc</code>\u65B9\u6CD5\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.iloc[[0, 2], df_stockload.columns.get_loc(&#39;High&#39;)])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">Date</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02    3349.1</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04    3392.8</span></span>
<span class="line"><span style="color:#A6ACCD;">Name: High, dtype: float64</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F53\u4EE5\u591A\u4E2A\u6807\u7B7E\u5F62\u5F0F\u7684\u5217\u7D22\u5F15\u83B7\u53D6\u5143\u7D20\uFF0C\u5982\u4EE5\u201CHigh\u201D\u548C\u201COpen\u201D\u5217\u7D22\u5F15\u83B7\u53D6\u7B2C0\u4E2A\u548C\u7B2C2\u4E2A\u5143\u7D20\uFF0C\u9700\u8981\u5C06\u591A\u4E2A\u6807\u7B7E\u5F62\u5F0F\u7684\u5217\u7D22\u5F15\u8F6C\u6362\u4E3A\u4F4D\u7F6E\u5F62\u5F0F\u7684\u5217\u7D22\u5F15\uFF0C\u518D\u4F7F\u7528iloc\u65B9\u6CD5\uFF0C<code>DataFrame.columns.get_indexer([&#39;High&#39;, &#39;Open&#39;])</code>\u8F6C\u6362\u540E\u4E3A&#39;[0 2]&#39;\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">print(df_stockload.iloc[[0, 2], df_stockload.columns.get_indexer([&#39;High&#39;, &#39;Open&#39;])])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High    Open</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                      </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04  3392.8  3371.0</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F53\u77E5\u9053\u884C\u7D22\u5F15\u4E3A&#39;2018-01-02&#39;, &#39;2018-01-04&#39;\uFF0C\u5982\u4F55\u83B7\u53D6\u5230\u8BE5\u884C\u6570\u636E\u4E2D&#39;High&#39;\u548C &#39;Open&#39;\u5217\u4E0B\u7684\u5143\u7D20\u5462\uFF1F\u76F4\u63A5\u5C06[&#39;2018-01-02&#39;, &#39;2018-01-04&#39;]\u4F5C\u4E3A\u884C\u6807\u7B7E\u7D22\u5F15\u4F20\u5165loc\u65B9\u6CD5\uFF0C\u9009\u53D6\u5143\u7D20\u65F6\u4F1A\u63D0\u793A\u9519\u8BEF\uFF0C\u5F15\u8D77\u4E0D\u517C\u5BB9\u7684\u4E3B\u8981\u539F\u56E0\u662F\u6B64\u5904DataFrame\u683C\u5F0F\u6570\u636E\u884C\u7D22\u5F15\u7684dtype\u4E3A&#39;datetime64[ns]&#39;\uFF0C\u4F20\u5165\u7684[&#39;2018-01-02&#39;, &#39;2018-01-04&#39;]\u884C\u6807\u7B7E\u7D22\u5F15dtype\u4E3A&#39;object&#39;\uFF0C\u89E3\u51B3\u65B9\u6CD5\u662F\u4F7F\u7528pandas\u7684<code>to_datetime</code>\u65B9\u6CD5\uFF0C\u5C06&#39;object&#39;\u7C7B\u578B\u7684\u65E5\u671F\u5185\u5BB9\u89E3\u6790\u6210 &#39;datetime&#39; \u5BF9\u8C61\uFF0C\u8FD9\u6837\u53EF\u517C\u5BB9dtype\u4E3A&#39;datetime64[ns]&#39;\u7684\u884C\u7D22\u5F15\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">df_stockload.loc[[&#39;2018-01-02&#39;, &#39;2018-01-04&#39;], [&#39;High&#39;,&#39;Open&#39;]]</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">KeyError: &quot;None of [Index([&#39;2018-01-02&#39;, &#39;2018-01-04&#39;], dtype=&#39;object&#39;, name=&#39;Date&#39;)] are in the [index]&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">print(df_stockload.loc[[pd.to_datetime(&#39;2018-01-02&#39;), pd.to_datetime(&#39;2018-01-04&#39;)], [&#39;High&#39;,&#39;Open&#39;]])</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">              High    Open</span></span>
<span class="line"><span style="color:#A6ACCD;">Date                      </span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-02  3349.1  3314.0</span></span>
<span class="line"><span style="color:#A6ACCD;">2018-01-04  3392.8  3371.0</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u672C\u5C0F\u8282\u4EE5\u5B9E\u9645\u7684\u80A1\u7968\u6570\u636E\u4E3A\u4F8B\uFF0C\u8BB2\u89E3\u4E86\u8BBF\u95EEDataFrame\u683C\u5F0F\u6570\u636E\u7684\u51E0\u79CD\u65B9\u6CD5\uFF0C\u5982<code>DataFrame.index</code>\u3001<code>DataFrame.columns</code>\u3001<code>DataFrame.values</code>\u3001<code>DataFrame.loc</code>\u3001<code>DataFrame.iloc</code>\u3001<code>DataFrame.ix</code>\u7B49\uFF0C\u8FD9\u4E9B\u65B9\u6CD5\u5728\u540E\u7EED\u7684\u91CF\u5316\u4EA4\u6613\u5F00\u53D1\u4E2D\u4F1A\u9891\u7E41\u4F7F\u7528\u5230\uFF0C\u540C\u5B66\u4EEC\u52A1\u5FC5\u8981\u8BA4\u771F\u638C\u63E1\uFF0C\u53E6\u5916\u968F\u7740Panads\u5F03\u7528\u4E86ix\u65B9\u6CD5\uFF0C\u540C\u5B66\u4EEC\u7279\u522B\u8981\u91CD\u70B9\u5173\u6CE8\u6807\u7B7E\u5F62\u5F0F\u7684\u884C\\\u5217\u7D22\u5F15\u4E0E\u4F4D\u7F6E\u5F62\u5F0F\u7684\u884C\\\u5217\u7D22\u5F15\u4E4B\u95F4\u7684\u8F6C\u6362\uFF0C\u53EF\u4EE5\u5E2E\u52A9\u6211\u4EEC\u66F4\u7075\u6D3B\u7684\u8BBF\u95EEDataFrame\u5143\u7D20\u3002</p><p>\u6700\u540E\uFF0C\u7ED9\u5927\u5BB6\u7559\u4E00\u9053\u601D\u8003\u9898\uFF1A</p><p>\u5982\u4F55\u4F7F\u7528\u6761\u4EF6\u5224\u65AD\u65B9\u5F0F\u9009\u53D6\u5143\u7D20\u5462\uFF1F\u6BD4\u5982\u884C\u7684\u9009\u53D6\u6761\u4EF6\u662F&#39;High&#39;\u5217\u4E2D\u6570\u503C\u5927\u4E8E\u5E73\u5747\u503C\u6240\u5BF9\u5E94\u7684\u884C\uFF0C\u5217\u7684\u9009\u53D6\u4E3A\u5168\u90E8\u5217\u7684\u5143\u7D20\u3002</p><p>\u6B22\u8FCE\u5927\u5BB6\u5728\u7559\u8A00\u533A\u7559\u8A00\uFF0C\u6211\u4EEC\u4E00\u8D77\u8BA8\u8BBA\u3002</p>`,48),o=[e];function c(t,i,r,C,A,d){return n(),a("div",null,o)}const u=s(p,[["render",c]]);export{y as __pageData,u as default};
