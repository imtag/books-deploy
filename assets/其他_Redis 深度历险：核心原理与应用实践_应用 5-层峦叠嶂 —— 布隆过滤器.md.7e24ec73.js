import{_ as s,c as n,o as a,d as l}from"./app.e5528619.js";const y=JSON.parse('{"title":"\u5E94\u7528 5-\u5C42\u5CE6\u53E0\u5D82 \u2014\u2014 \u5E03\u9686\u8FC7\u6EE4\u5668","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F","slug":"\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F","link":"#\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F","children":[]},{"level":2,"title":"Redis \u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668","slug":"redis-\u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668","link":"#redis-\u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668","children":[]},{"level":2,"title":"\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528","slug":"\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528","link":"#\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528","children":[]},{"level":2,"title":"\u6CE8\u610F\u4E8B\u9879","slug":"\u6CE8\u610F\u4E8B\u9879","link":"#\u6CE8\u610F\u4E8B\u9879","children":[]},{"level":2,"title":"\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406","slug":"\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406","link":"#\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406","children":[]},{"level":2,"title":"\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1","slug":"\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1","link":"#\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1","children":[]},{"level":2,"title":"\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316","slug":"\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316","link":"#\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316","children":[]},{"level":2,"title":"\u7528\u4E0D\u4E0A Redis4.0 \u600E\u4E48\u529E\uFF1F","slug":"\u7528\u4E0D\u4E0A-redis4-0-\u600E\u4E48\u529E\uFF1F","link":"#\u7528\u4E0D\u4E0A-redis4-0-\u600E\u4E48\u529E\uFF1F","children":[]},{"level":2,"title":"\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528","slug":"\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528","link":"#\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528","children":[]},{"level":2,"title":"\u6269\u5C55\u9605\u8BFB","slug":"\u6269\u5C55\u9605\u8BFB","link":"#\u6269\u5C55\u9605\u8BFB","children":[]}],"relativePath":"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u5E94\u7528 5-\u5C42\u5CE6\u53E0\u5D82 \u2014\u2014 \u5E03\u9686\u8FC7\u6EE4\u5668.md"}'),e={name:"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u5E94\u7528 5-\u5C42\u5CE6\u53E0\u5D82 \u2014\u2014 \u5E03\u9686\u8FC7\u6EE4\u5668.md"},p=l(`<h1 id="\u5E94\u7528-5-\u5C42\u5CE6\u53E0\u5D82-\u2014\u2014-\u5E03\u9686\u8FC7\u6EE4\u5668" tabindex="-1">\u5E94\u7528 5-\u5C42\u5CE6\u53E0\u5D82 \u2014\u2014 \u5E03\u9686\u8FC7\u6EE4\u5668 <a class="header-anchor" href="#\u5E94\u7528-5-\u5C42\u5CE6\u53E0\u5D82-\u2014\u2014-\u5E03\u9686\u8FC7\u6EE4\u5668" aria-hidden="true">#</a></h1><hr><h1 id="\u5E94\u7528-5\uFF1A\u5C42\u5CE6\u53E0\u5D82-\u2014\u2014-\u5E03\u9686\u8FC7\u6EE4\u5668" tabindex="-1">\u5E94\u7528 5\uFF1A\u5C42\u5CE6\u53E0\u5D82 \u2014\u2014 \u5E03\u9686\u8FC7\u6EE4\u5668 <a class="header-anchor" href="#\u5E94\u7528-5\uFF1A\u5C42\u5CE6\u53E0\u5D82-\u2014\u2014-\u5E03\u9686\u8FC7\u6EE4\u5668" aria-hidden="true">#</a></h1><p>\u4E0A\u4E00\u8282\u6211\u4EEC\u5B66\u4F1A\u4E86\u4F7F\u7528 HyperLogLog \u6570\u636E\u7ED3\u6784\u6765\u8FDB\u884C\u4F30\u6570\uFF0C\u5B83\u975E\u5E38\u6709\u4EF7\u503C\uFF0C\u53EF\u4EE5\u89E3\u51B3\u5F88\u591A\u7CBE\u786E\u5EA6\u4E0D\u9AD8\u7684\u7EDF\u8BA1\u9700\u6C42\u3002</p><p>\u4F46\u662F\u5982\u679C\u6211\u4EEC\u60F3\u77E5\u9053\u67D0\u4E00\u4E2A\u503C\u662F\u4E0D\u662F\u5DF2\u7ECF\u5728 HyperLogLog \u7ED3\u6784\u91CC\u9762\u4E86\uFF0C\u5B83\u5C31\u65E0\u80FD\u4E3A\u529B\u4E86\uFF0C\u5B83\u53EA\u63D0\u4F9B\u4E86 pfadd \u548C pfcount \u65B9\u6CD5\uFF0C\u6CA1\u6709\u63D0\u4F9B pfcontains \u8FD9\u79CD\u65B9\u6CD5\u3002</p><p>\u8BB2\u4E2A\u4F7F\u7528\u573A\u666F\uFF0C\u6BD4\u5982\u6211\u4EEC\u5728\u4F7F\u7528\u65B0\u95FB\u5BA2\u6237\u7AEF\u770B\u65B0\u95FB\u65F6\uFF0C\u5B83\u4F1A\u7ED9\u6211\u4EEC\u4E0D\u505C\u5730\u63A8\u8350\u65B0\u7684\u5185\u5BB9\uFF0C\u5B83\u6BCF\u6B21\u63A8\u8350\u65F6\u8981\u53BB\u91CD\uFF0C\u53BB\u6389\u90A3\u4E9B\u5DF2\u7ECF\u770B\u8FC7\u7684\u5185\u5BB9\u3002\u95EE\u9898\u6765\u4E86\uFF0C\u65B0\u95FB\u5BA2\u6237\u7AEF\u63A8\u8350\u7CFB\u7EDF\u5982\u4F55\u5B9E\u73B0\u63A8\u9001\u53BB\u91CD\u7684\uFF1F</p><p>\u4F60\u4F1A\u60F3\u5230\u670D\u52A1\u5668\u8BB0\u5F55\u4E86\u7528\u6237\u770B\u8FC7\u7684\u6240\u6709\u5386\u53F2\u8BB0\u5F55\uFF0C\u5F53\u63A8\u8350\u7CFB\u7EDF\u63A8\u8350\u65B0\u95FB\u65F6\u4F1A\u4ECE\u6BCF\u4E2A\u7528\u6237\u7684\u5386\u53F2\u8BB0\u5F55\u91CC\u8FDB\u884C\u7B5B\u9009\uFF0C\u8FC7\u6EE4\u6389\u90A3\u4E9B\u5DF2\u7ECF\u5B58\u5728\u7684\u8BB0\u5F55\u3002\u95EE\u9898\u662F\u5F53\u7528\u6237\u91CF\u5F88\u5927\uFF0C\u6BCF\u4E2A\u7528\u6237\u770B\u8FC7\u7684\u65B0\u95FB\u53C8\u5F88\u591A\u7684\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u79CD\u65B9\u5F0F\uFF0C\u63A8\u8350\u7CFB\u7EDF\u7684\u53BB\u91CD\u5DE5\u4F5C\u5728\u6027\u80FD\u4E0A\u8DDF\u7684\u4E0A\u4E48\uFF1F</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/2/164599f30fae2a7f~tplv-t2oaga2asx-image.image" alt=""></p><p>\u5B9E\u9645\u4E0A\uFF0C\u5982\u679C\u5386\u53F2\u8BB0\u5F55\u5B58\u50A8\u5728\u5173\u7CFB\u6570\u636E\u5E93\u91CC\uFF0C\u53BB\u91CD\u5C31\u9700\u8981\u9891\u7E41\u5730\u5BF9\u6570\u636E\u5E93\u8FDB\u884C exists \u67E5\u8BE2\uFF0C\u5F53\u7CFB\u7EDF\u5E76\u53D1\u91CF\u5F88\u9AD8\u65F6\uFF0C\u6570\u636E\u5E93\u662F\u5F88\u96BE\u625B\u4F4F\u538B\u529B\u7684\u3002</p><p>\u4F60\u53EF\u80FD\u53C8\u60F3\u5230\u4E86\u7F13\u5B58\uFF0C\u4F46\u662F\u5982\u6B64\u591A\u7684\u5386\u53F2\u8BB0\u5F55\u5168\u90E8\u7F13\u5B58\u8D77\u6765\uFF0C\u90A3\u5F97\u6D6A\u8D39\u591A\u5927\u5B58\u50A8\u7A7A\u95F4\u554A\uFF1F\u800C\u4E14\u8FD9\u4E2A\u5B58\u50A8\u7A7A\u95F4\u662F\u968F\u7740\u65F6\u95F4\u7EBF\u6027\u589E\u957F\uFF0C\u4F60\u6491\u5F97\u4F4F\u4E00\u4E2A\u6708\uFF0C\u4F60\u80FD\u6491\u5F97\u4F4F\u51E0\u5E74\u4E48\uFF1F\u4F46\u662F\u4E0D\u7F13\u5B58\u7684\u8BDD\uFF0C\u6027\u80FD\u53C8\u8DDF\u4E0D\u4E0A\uFF0C\u8FD9\u8BE5\u600E\u4E48\u529E\uFF1F</p><p>\u8FD9\u65F6\uFF0C\u5E03\u9686\u8FC7\u6EE4\u5668 (Bloom Filter) \u95EA\u4EAE\u767B\u573A\u4E86\uFF0C\u5B83\u5C31\u662F\u4E13\u95E8\u7528\u6765\u89E3\u51B3\u8FD9\u79CD\u53BB\u91CD\u95EE\u9898\u7684\u3002\u5B83\u5728\u8D77\u5230\u53BB\u91CD\u7684\u540C\u65F6\uFF0C\u5728\u7A7A\u95F4\u4E0A\u8FD8\u80FD\u8282\u7701 90% \u4EE5\u4E0A\uFF0C\u53EA\u662F\u7A0D\u5FAE\u6709\u90A3\u4E48\u70B9\u4E0D\u7CBE\u786E\uFF0C\u4E5F\u5C31\u662F\u6709\u4E00\u5B9A\u7684\u8BEF\u5224\u6982\u7387\u3002</p><h2 id="\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F" tabindex="-1">\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F <a class="header-anchor" href="#\u5E03\u9686\u8FC7\u6EE4\u5668\u662F\u4EC0\u4E48\uFF1F" aria-hidden="true">#</a></h2><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u53EF\u4EE5\u7406\u89E3\u4E3A\u4E00\u4E2A\u4E0D\u600E\u4E48\u7CBE\u786E\u7684 set \u7ED3\u6784\uFF0C\u5F53\u4F60\u4F7F\u7528\u5B83\u7684 contains \u65B9\u6CD5\u5224\u65AD\u67D0\u4E2A\u5BF9\u8C61\u662F\u5426\u5B58\u5728\u65F6\uFF0C\u5B83\u53EF\u80FD\u4F1A\u8BEF\u5224\u3002\u4F46\u662F\u5E03\u9686\u8FC7\u6EE4\u5668\u4E5F\u4E0D\u662F\u7279\u522B\u4E0D\u7CBE\u786E\uFF0C\u53EA\u8981\u53C2\u6570\u8BBE\u7F6E\u7684\u5408\u7406\uFF0C\u5B83\u7684\u7CBE\u786E\u5EA6\u53EF\u4EE5\u63A7\u5236\u7684\u76F8\u5BF9\u8DB3\u591F\u7CBE\u786E\uFF0C\u53EA\u4F1A\u6709\u5C0F\u5C0F\u7684\u8BEF\u5224\u6982\u7387\u3002</p><p>\u5F53\u5E03\u9686\u8FC7\u6EE4\u5668\u8BF4\u67D0\u4E2A\u503C\u5B58\u5728\u65F6\uFF0C\u8FD9\u4E2A\u503C\u53EF\u80FD\u4E0D\u5B58\u5728\uFF1B\u5F53\u5B83\u8BF4\u4E0D\u5B58\u5728\u65F6\uFF0C\u90A3\u5C31\u80AF\u5B9A\u4E0D\u5B58\u5728\u3002\u6253\u4E2A\u6BD4\u65B9\uFF0C\u5F53\u5B83\u8BF4\u4E0D\u8BA4\u8BC6\u4F60\u65F6\uFF0C\u80AF\u5B9A\u5C31\u4E0D\u8BA4\u8BC6\uFF1B\u5F53\u5B83\u8BF4\u89C1\u8FC7\u4F60\u65F6\uFF0C\u53EF\u80FD\u6839\u672C\u5C31\u6CA1\u89C1\u8FC7\u9762\uFF0C\u4E0D\u8FC7\u56E0\u4E3A\u4F60\u7684\u8138\u8DDF\u5B83\u8BA4\u8BC6\u7684\u4EBA\u4E2D\u67D0\u8138\u6BD4\u8F83\u76F8\u4F3C (\u67D0\u4E9B\u719F\u8138\u7684\u7CFB\u6570\u7EC4\u5408)\uFF0C\u6240\u4EE5\u8BEF\u5224\u4EE5\u524D\u89C1\u8FC7\u4F60\u3002</p><p>\u5957\u5728\u4E0A\u9762\u7684\u4F7F\u7528\u573A\u666F\u4E2D\uFF0C\u5E03\u9686\u8FC7\u6EE4\u5668\u80FD\u51C6\u786E\u8FC7\u6EE4\u6389\u90A3\u4E9B\u5DF2\u7ECF\u770B\u8FC7\u7684\u5185\u5BB9\uFF0C\u90A3\u4E9B\u6CA1\u6709\u770B\u8FC7\u7684\u65B0\u5185\u5BB9\uFF0C\u5B83\u4E5F\u4F1A\u8FC7\u6EE4\u6389\u6781\u5C0F\u4E00\u90E8\u5206 (\u8BEF\u5224)\uFF0C\u4F46\u662F\u7EDD\u5927\u591A\u6570\u65B0\u5185\u5BB9\u5B83\u90FD\u80FD\u51C6\u786E\u8BC6\u522B\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u5B8C\u5168\u4FDD\u8BC1\u63A8\u8350\u7ED9\u7528\u6237\u7684\u5185\u5BB9\u90FD\u662F\u65E0\u91CD\u590D\u7684\u3002</p><h2 id="redis-\u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668" tabindex="-1">Redis \u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668 <a class="header-anchor" href="#redis-\u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668" aria-hidden="true">#</a></h2><p>Redis \u5B98\u65B9\u63D0\u4F9B\u7684\u5E03\u9686\u8FC7\u6EE4\u5668\u5230\u4E86 Redis 4.0 \u63D0\u4F9B\u4E86\u63D2\u4EF6\u529F\u80FD\u4E4B\u540E\u624D\u6B63\u5F0F\u767B\u573A\u3002\u5E03\u9686\u8FC7\u6EE4\u5668\u4F5C\u4E3A\u4E00\u4E2A\u63D2\u4EF6\u52A0\u8F7D\u5230 Redis Server \u4E2D\uFF0C\u7ED9 Redis \u63D0\u4F9B\u4E86\u5F3A\u5927\u7684\u5E03\u9686\u53BB\u91CD\u529F\u80FD\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u6765\u4F53\u9A8C\u4E00\u4E0B Redis 4.0 \u7684\u5E03\u9686\u8FC7\u6EE4\u5668\uFF0C\u4E3A\u4E86\u7701\u53BB\u7E41\u7410\u5B89\u88C5\u8FC7\u7A0B\uFF0C\u6211\u4EEC\u76F4\u63A5\u7528 Docker \u5427\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; docker pull redislabs/rebloom  # \u62C9\u53D6\u955C\u50CF</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; docker run -p6379:6379 redislabs/rebloom  # \u8FD0\u884C\u5BB9\u5668</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; redis-cli  # \u8FDE\u63A5\u5BB9\u5668\u4E2D\u7684 redis \u670D\u52A1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5982\u679C\u4E0A\u9762\u4E09\u6761\u6307\u4EE4\u6267\u884C\u6CA1\u6709\u95EE\u9898\uFF0C\u4E0B\u9762\u5C31\u53EF\u4EE5\u4F53\u9A8C\u5E03\u9686\u8FC7\u6EE4\u5668\u4E86\u3002</p><h2 id="\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528" tabindex="-1">\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528 <a class="header-anchor" href="#\u5E03\u9686\u8FC7\u6EE4\u5668\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a></h2><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u6709\u4E8C\u4E2A\u57FA\u672C\u6307\u4EE4\uFF0C<code>bf.add</code> \u6DFB\u52A0\u5143\u7D20\uFF0C<code>bf.exists</code> \u67E5\u8BE2\u5143\u7D20\u662F\u5426\u5B58\u5728\uFF0C\u5B83\u7684\u7528\u6CD5\u548C set \u96C6\u5408\u7684 sadd \u548C sismember \u5DEE\u4E0D\u591A\u3002\u6CE8\u610F <code>bf.add</code> \u53EA\u80FD\u4E00\u6B21\u6DFB\u52A0\u4E00\u4E2A\u5143\u7D20\uFF0C\u5982\u679C\u60F3\u8981\u4E00\u6B21\u6DFB\u52A0\u591A\u4E2A\uFF0C\u5C31\u9700\u8981\u7528\u5230 <code>bf.madd</code> \u6307\u4EE4\u3002\u540C\u6837\u5982\u679C\u9700\u8981\u4E00\u6B21\u67E5\u8BE2\u591A\u4E2A\u5143\u7D20\u662F\u5426\u5B58\u5728\uFF0C\u5C31\u9700\u8981\u7528\u5230 <code>bf.mexists</code> \u6307\u4EE4\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.add codehole user1</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.add codehole user2</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.add codehole user3</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.exists codehole user1</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.exists codehole user2</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.exists codehole user3</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.exists codehole user4</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 0</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.madd codehole user4 user5 user6</span></span>
<span class="line"><span style="color:#A6ACCD;">1) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">2) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">3) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; bf.mexists codehole user4 user5 user6 user7</span></span>
<span class="line"><span style="color:#A6ACCD;">1) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">2) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">3) (integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">4) (integer) 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4F3C\u4E4E\u5F88\u51C6\u786E\u554A\uFF0C\u4E00\u4E2A\u90FD\u6CA1\u8BEF\u5224\u3002\u4E0B\u9762\u6211\u4EEC\u7528 Python \u811A\u672C\u52A0\u5165\u5F88\u591A\u5143\u7D20\uFF0C\u770B\u770B\u52A0\u5230\u7B2C\u51E0\u4E2A\u5143\u7D20\u7684\u65F6\u5019\uFF0C\u5E03\u9686\u8FC7\u6EE4\u5668\u4F1A\u51FA\u73B0\u8BEF\u5224\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># coding: utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">import redis</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client = redis.StrictRedis()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client.delete(&quot;codehole&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">for i in range(100000):</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.execute_command(&quot;bf.add&quot;, &quot;codehole&quot;, &quot;user%d&quot; % i)</span></span>
<span class="line"><span style="color:#A6ACCD;">    ret = client.execute_command(&quot;bf.exists&quot;, &quot;codehole&quot;, &quot;user%d&quot; % i)</span></span>
<span class="line"><span style="color:#A6ACCD;">    if ret == 0:</span></span>
<span class="line"><span style="color:#A6ACCD;">        print i</span></span>
<span class="line"><span style="color:#A6ACCD;">        break</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Java \u5BA2\u6237\u7AEF Jedis-2.x \u6CA1\u6709\u63D0\u4F9B\u6307\u4EE4\u6269\u5C55\u673A\u5236\uFF0C\u6240\u4EE5\u4F60\u65E0\u6CD5\u76F4\u63A5\u4F7F\u7528 Jedis \u6765\u8BBF\u95EE Redis Module \u63D0\u4F9B\u7684 <a href="http://bf.xxx" target="_blank" rel="noreferrer">bf.xxx</a> \u6307\u4EE4\u3002RedisLabs \u63D0\u4F9B\u4E86\u4E00\u4E2A\u5355\u72EC\u7684\u5305 <a href="https://github.com/RedisLabs/JReBloom" target="_blank" rel="noreferrer">JReBloom</a>\uFF0C\u4F46\u662F\u5B83\u662F\u57FA\u4E8E Jedis-3.0\uFF0CJedis-3.0 \u8FD9\u4E2A\u5305\u76EE\u524D\u8FD8\u6CA1\u6709\u8FDB\u5165 release\uFF0C\u6CA1\u6709\u8FDB\u5165 maven \u7684\u4E2D\u592E\u4ED3\u5E93\uFF0C\u9700\u8981\u5728 Github \u4E0A\u4E0B\u8F7D\u3002\u5728\u4F7F\u7528\u4E0A\u5F88\u4E0D\u65B9\u4FBF\uFF0C\u5982\u679C\u6015\u9EBB\u70E6\uFF0C\u8FD8\u53EF\u4EE5\u4F7F\u7528 <a href="https://github.com/lettuce-io/lettuce-core" target="_blank" rel="noreferrer">lettuce</a>\uFF0C\u5B83\u662F\u53E6\u4E00\u4E2A Redis \u7684\u5BA2\u6237\u7AEF\uFF0C\u76F8\u6BD4 Jedis \u800C\u8A00\uFF0C\u5B83\u5F88\u65E9\u5C31\u652F\u6301\u4E86\u6307\u4EE4\u6269\u5C55\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">public class BloomTest {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    Client client = new Client();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    client.delete(&quot;codehole&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 100000; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      client.add(&quot;codehole&quot;, &quot;user&quot; + i);</span></span>
<span class="line"><span style="color:#A6ACCD;">      boolean ret = client.exists(&quot;codehole&quot;, &quot;user&quot; + i);</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (!ret) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(i);</span></span>
<span class="line"><span style="color:#A6ACCD;">        break;</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    client.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6267\u884C\u4E0A\u9762\u7684\u4EE3\u7801\u540E\uFF0C\u4F60\u4F1A\u5F20\u5927\u4E86\u5634\u5DF4\u53D1\u73B0\u5C45\u7136\u6CA1\u6709\u8F93\u51FA\uFF0C\u585E\u8FDB\u53BB\u4E86 100000 \u4E2A\u5143\u7D20\uFF0C\u8FD8\u662F\u6CA1\u6709\u8BEF\u5224\uFF0C\u8FD9\u662F\u600E\u4E48\u56DE\u4E8B\uFF1F\u5982\u679C\u4F60\u4E0D\u6B7B\u5FC3\u7684\u8BDD\uFF0C\u53EF\u4EE5\u5C06\u6570\u5B57\u518D\u52A0\u4E00\u4E2A 0 \u8BD5\u8BD5\uFF0C\u4F60\u4F1A\u53D1\u73B0\u4F9D\u7136\u6CA1\u6709\u8BEF\u5224\u3002</p><p>\u539F\u56E0\u5C31\u5728\u4E8E\u5E03\u9686\u8FC7\u6EE4\u5668\u5BF9\u4E8E\u5DF2\u7ECF\u89C1\u8FC7\u7684\u5143\u7D20\u80AF\u5B9A\u4E0D\u4F1A\u8BEF\u5224\uFF0C\u5B83\u53EA\u4F1A\u8BEF\u5224\u90A3\u4E9B\u6CA1\u89C1\u8FC7\u7684\u5143\u7D20\u3002\u6240\u4EE5\u6211\u4EEC\u8981\u7A0D\u5FAE\u6539\u4E00\u4E0B\u4E0A\u9762\u7684\u811A\u672C\uFF0C\u4F7F\u7528 bf.exists \u53BB\u67E5\u627E\u6CA1\u89C1\u8FC7\u7684\u5143\u7D20\uFF0C\u770B\u770B\u5B83\u662F\u4E0D\u662F\u4EE5\u4E3A\u81EA\u5DF1\u89C1\u8FC7\u4E86\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># coding: utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">import redis</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client = redis.StrictRedis()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client.delete(&quot;codehole&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">for i in range(100000):</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.execute_command(&quot;bf.add&quot;, &quot;codehole&quot;, &quot;user%d&quot; % i)</span></span>
<span class="line"><span style="color:#A6ACCD;">    # \u6CE8\u610F i+1\uFF0C\u8FD9\u4E2A\u662F\u5F53\u524D\u5E03\u9686\u8FC7\u6EE4\u5668\u6CA1\u89C1\u8FC7\u7684</span></span>
<span class="line"><span style="color:#A6ACCD;">    ret = client.execute_command(&quot;bf.exists&quot;, &quot;codehole&quot;, &quot;user%d&quot; % (i+1))</span></span>
<span class="line"><span style="color:#A6ACCD;">    if ret == 1:</span></span>
<span class="line"><span style="color:#A6ACCD;">        print i</span></span>
<span class="line"><span style="color:#A6ACCD;">        break</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Java \u7248:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">public class BloomTest {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    Client client = new Client();</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    client.delete(&quot;codehole&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 100000; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      client.add(&quot;codehole&quot;, &quot;user&quot; + i);</span></span>
<span class="line"><span style="color:#A6ACCD;">      boolean ret = client.exists(&quot;codehole&quot;, &quot;user&quot; + (i + 1));</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (ret) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        System.out.println(i);</span></span>
<span class="line"><span style="color:#A6ACCD;">        break;</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    client.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD0\u884C\u540E\uFF0C\u6211\u4EEC\u770B\u5230\u4E86\u8F93\u51FA\u662F 214\uFF0C\u4E5F\u5C31\u662F\u5230\u7B2C 214 \u7684\u65F6\u5019\uFF0C\u5B83\u51FA\u73B0\u4E86\u8BEF\u5224\u3002</p><p>\u90A3\u5982\u4F55\u6765\u6D4B\u91CF\u8BEF\u5224\u7387\u5462\uFF1F\u6211\u4EEC\u5148\u968F\u673A\u51FA\u4E00\u5806\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u5207\u5206\u4E3A 2 \u7EC4\uFF0C\u5C06\u5176\u4E2D\u4E00\u7EC4\u585E\u5165\u5E03\u9686\u8FC7\u6EE4\u5668\uFF0C\u7136\u540E\u518D\u5224\u65AD\u53E6\u5916\u4E00\u7EC4\u7684\u5B57\u7B26\u4E32\u5B58\u5728\u4E0E\u5426\uFF0C\u53D6\u8BEF\u5224\u7684\u4E2A\u6570\u548C\u5B57\u7B26\u4E32\u603B\u91CF\u4E00\u534A\u7684\u767E\u5206\u6BD4\u4F5C\u4E3A\u8BEF\u5224\u7387\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># coding: utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">import redis</span></span>
<span class="line"><span style="color:#A6ACCD;">import random</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client = redis.StrictRedis()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">CHARS = &#39;&#39;.join([chr(ord(&#39;a&#39;) + i) for i in range(26)])</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">def random_string(n):</span></span>
<span class="line"><span style="color:#A6ACCD;">    chars = []</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i in range(n):</span></span>
<span class="line"><span style="color:#A6ACCD;">        idx = random.randint(0, len(CHARS) - 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">        chars.append(CHARS[idx])</span></span>
<span class="line"><span style="color:#A6ACCD;">    return &#39;&#39;.join(chars)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">users = list(set([random_string(64) for i in range(100000)]))</span></span>
<span class="line"><span style="color:#A6ACCD;">print &#39;total users&#39;, len(users)</span></span>
<span class="line"><span style="color:#A6ACCD;">users_train = users[:len(users)/2]</span></span>
<span class="line"><span style="color:#A6ACCD;">users_test = users[len(users)/2:]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client.delete(&quot;codehole&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;">falses = 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">for user in users_train:</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.execute_command(&quot;bf.add&quot;, &quot;codehole&quot;, user)</span></span>
<span class="line"><span style="color:#A6ACCD;">print &#39;all trained&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">for user in users_test:</span></span>
<span class="line"><span style="color:#A6ACCD;">    ret = client.execute_command(&quot;bf.exists&quot;, &quot;codehole&quot;, user)</span></span>
<span class="line"><span style="color:#A6ACCD;">    if ret == 1:</span></span>
<span class="line"><span style="color:#A6ACCD;">        falses += 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">print falses, len(users_test)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Java \u7248:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">public class BloomTest {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private String chars;</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span></span>
<span class="line"><span style="color:#A6ACCD;">    StringBuilder builder = new StringBuilder();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 26; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      builder.append((char) (&#39;a&#39; + i));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    chars = builder.toString();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private String randomString(int n) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    StringBuilder builder = new StringBuilder();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; n; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      int idx = ThreadLocalRandom.current().nextInt(chars.length());</span></span>
<span class="line"><span style="color:#A6ACCD;">      builder.append(chars.charAt(idx));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return builder.toString();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private List&lt;String&gt; randomUsers(int n) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; users = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 100000; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      users.add(randomString(64));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return users;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    BloomTest bloomer = new BloomTest();</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; users = bloomer.randomUsers(100000);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; usersTrain = users.subList(0, users.size() / 2);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; usersTest = users.subList(users.size() / 2, users.size());</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    Client client = new Client();</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.delete(&quot;codehole&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (String user : usersTrain) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      client.add(&quot;codehole&quot;, user);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    int falses = 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (String user : usersTest) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      boolean ret = client.exists(&quot;codehole&quot;, user);</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (ret) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        falses++;</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.printf(&quot;%d %d\\n&quot;, falses, usersTest.size());</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD0\u884C\u4E00\u4E0B\uFF0C\u7B49\u5F85\u5927\u7EA6\u4E00\u5206\u949F\uFF0C\u8F93\u51FA:</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">total users 100000</span></span>
<span class="line"><span style="color:#A6ACCD;">all trained</span></span>
<span class="line"><span style="color:#A6ACCD;">628 50000</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u8BEF\u5224\u7387\u5927\u7EA6 1% \u591A\u70B9\u3002\u4F60\u4E5F\u8BB8\u4F1A\u95EE\u8FD9\u4E2A\u8BEF\u5224\u7387\u8FD8\u662F\u6709\u70B9\u9AD8\u554A\uFF0C\u6709\u6CA1\u6709\u529E\u6CD5\u964D\u4F4E\u4E00\u70B9\uFF1F\u7B54\u6848\u662F\u6709\u7684\u3002</p><p>\u6211\u4EEC\u4E0A\u9762\u4F7F\u7528\u7684\u5E03\u9686\u8FC7\u6EE4\u5668\u53EA\u662F\u9ED8\u8BA4\u53C2\u6570\u7684\u5E03\u9686\u8FC7\u6EE4\u5668\uFF0C\u5B83\u5728\u6211\u4EEC\u7B2C\u4E00\u6B21 add \u7684\u65F6\u5019\u81EA\u52A8\u521B\u5EFA\u3002Redis \u5176\u5B9E\u8FD8\u63D0\u4F9B\u4E86\u81EA\u5B9A\u4E49\u53C2\u6570\u7684\u5E03\u9686\u8FC7\u6EE4\u5668\uFF0C\u9700\u8981\u6211\u4EEC\u5728 add \u4E4B\u524D\u4F7F\u7528<code>bf.reserve</code>\u6307\u4EE4\u663E\u5F0F\u521B\u5EFA\u3002\u5982\u679C\u5BF9\u5E94\u7684 key \u5DF2\u7ECF\u5B58\u5728\uFF0C<code>bf.reserve</code>\u4F1A\u62A5\u9519\u3002<code>bf.reserve</code>\u6709\u4E09\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F key, <code>error_rate</code>\u548C<code>initial_size</code>\u3002\u9519\u8BEF\u7387\u8D8A\u4F4E\uFF0C\u9700\u8981\u7684\u7A7A\u95F4\u8D8A\u5927\u3002<code>initial_size</code>\u53C2\u6570\u8868\u793A\u9884\u8BA1\u653E\u5165\u7684\u5143\u7D20\u6570\u91CF\uFF0C\u5F53\u5B9E\u9645\u6570\u91CF\u8D85\u51FA\u8FD9\u4E2A\u6570\u503C\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u4E0A\u5347\u3002</p><p>\u6240\u4EE5\u9700\u8981\u63D0\u524D\u8BBE\u7F6E\u4E00\u4E2A\u8F83\u5927\u7684\u6570\u503C\u907F\u514D\u8D85\u51FA\u5BFC\u81F4\u8BEF\u5224\u7387\u5347\u9AD8\u3002\u5982\u679C\u4E0D\u4F7F\u7528 bf.reserve\uFF0C\u9ED8\u8BA4\u7684<code>error_rate</code>\u662F 0.01\uFF0C\u9ED8\u8BA4\u7684<code>initial_size</code>\u662F 100\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u4F7F\u7528 bf.reserve \u6539\u9020\u4E00\u4E0B\u4E0A\u9762\u7684\u811A\u672C\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># coding: utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">import redis</span></span>
<span class="line"><span style="color:#A6ACCD;">import random</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">client = redis.StrictRedis()</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">CHARS = &#39;&#39;.join([chr(ord(&#39;a&#39;) + i) for i in range(26)])</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">def random_string(n):</span></span>
<span class="line"><span style="color:#A6ACCD;">    chars = []</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i in range(n):</span></span>
<span class="line"><span style="color:#A6ACCD;">        idx = random.randint(0, len(CHARS) - 1)</span></span>
<span class="line"><span style="color:#A6ACCD;">        chars.append(CHARS[idx])</span></span>
<span class="line"><span style="color:#A6ACCD;">    return &#39;&#39;.join(chars)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">users = list(set([random_string(64) for i in range(100000)]))</span></span>
<span class="line"><span style="color:#A6ACCD;">print &#39;total users&#39;, len(users)</span></span>
<span class="line"><span style="color:#A6ACCD;">users_train = users[:len(users)/2]</span></span>
<span class="line"><span style="color:#A6ACCD;">users_test = users[len(users)/2:]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">falses = 0</span></span>
<span class="line"><span style="color:#A6ACCD;">client.delete(&quot;codehole&quot;)</span></span>
<span class="line"><span style="color:#A6ACCD;"># \u589E\u52A0\u4E86\u4E0B\u9762\u8FD9\u4E00\u53E5</span></span>
<span class="line"><span style="color:#A6ACCD;">client.execute_command(&quot;bf.reserve&quot;, &quot;codehole&quot;, 0.001, 50000)</span></span>
<span class="line"><span style="color:#A6ACCD;">for user in users_train:</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.execute_command(&quot;bf.add&quot;, &quot;codehole&quot;, user)</span></span>
<span class="line"><span style="color:#A6ACCD;">print &#39;all trained&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">for user in users_test:</span></span>
<span class="line"><span style="color:#A6ACCD;">    ret = client.execute_command(&quot;bf.exists&quot;, &quot;codehole&quot;, user)</span></span>
<span class="line"><span style="color:#A6ACCD;">    if ret == 1:</span></span>
<span class="line"><span style="color:#A6ACCD;">        falses += 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">print falses, len(users_test)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Java \u7248\u672C\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">public class BloomTest {</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private String chars;</span></span>
<span class="line"><span style="color:#A6ACCD;">  {</span></span>
<span class="line"><span style="color:#A6ACCD;">    StringBuilder builder = new StringBuilder();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 26; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      builder.append((char) (&#39;a&#39; + i));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    chars = builder.toString();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private String randomString(int n) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    StringBuilder builder = new StringBuilder();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; n; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      int idx = ThreadLocalRandom.current().nextInt(chars.length());</span></span>
<span class="line"><span style="color:#A6ACCD;">      builder.append(chars.charAt(idx));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return builder.toString();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  private List&lt;String&gt; randomUsers(int n) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; users = new ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (int i = 0; i &lt; 100000; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      users.add(randomString(64));</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return users;</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">  public static void main(String[] args) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    BloomTest bloomer = new BloomTest();</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; users = bloomer.randomUsers(100000);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; usersTrain = users.subList(0, users.size() / 2);</span></span>
<span class="line"><span style="color:#A6ACCD;">    List&lt;String&gt; usersTest = users.subList(users.size() / 2, users.size());</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    Client client = new Client();</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.delete(&quot;codehole&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    // \u5BF9\u5E94 bf.reserve \u6307\u4EE4</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.createFilter(&quot;codehole&quot;, 50000, 0.001);</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (String user : usersTrain) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      client.add(&quot;codehole&quot;, user);</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    int falses = 0;</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (String user : usersTest) {</span></span>
<span class="line"><span style="color:#A6ACCD;">      boolean ret = client.exists(&quot;codehole&quot;, user);</span></span>
<span class="line"><span style="color:#A6ACCD;">      if (ret) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        falses++;</span></span>
<span class="line"><span style="color:#A6ACCD;">      }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    System.out.printf(&quot;%d %d\\n&quot;, falses, usersTest.size());</span></span>
<span class="line"><span style="color:#A6ACCD;">    client.close();</span></span>
<span class="line"><span style="color:#A6ACCD;">  }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD0\u884C\u4E00\u4E0B\uFF0C\u7B49\u5F85\u7EA6 1 \u5206\u949F\uFF0C\u8F93\u51FA\u5982\u4E0B\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">total users 100000</span></span>
<span class="line"><span style="color:#A6ACCD;">all trained</span></span>
<span class="line"><span style="color:#A6ACCD;">6 50000</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6211\u4EEC\u770B\u5230\u4E86\u8BEF\u5224\u7387\u5927\u7EA6 0.012%\uFF0C\u6BD4\u9884\u8BA1\u7684 0.1% \u4F4E\u5F88\u591A\uFF0C\u4E0D\u8FC7\u5E03\u9686\u7684\u6982\u7387\u662F\u6709\u8BEF\u5DEE\u7684\uFF0C\u53EA\u8981\u4E0D\u6BD4\u9884\u8BA1\u8BEF\u5224\u7387\u9AD8\u592A\u591A\uFF0C\u90FD\u662F\u6B63\u5E38\u73B0\u8C61\u3002</p><h2 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1">\u6CE8\u610F\u4E8B\u9879 <a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a></h2><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u7684<code>initial_size</code>\u4F30\u8BA1\u7684\u8FC7\u5927\uFF0C\u4F1A\u6D6A\u8D39\u5B58\u50A8\u7A7A\u95F4\uFF0C\u4F30\u8BA1\u7684\u8FC7\u5C0F\uFF0C\u5C31\u4F1A\u5F71\u54CD\u51C6\u786E\u7387\uFF0C\u7528\u6237\u5728\u4F7F\u7528\u4E4B\u524D\u4E00\u5B9A\u8981\u5C3D\u53EF\u80FD\u5730\u7CBE\u786E\u4F30\u8BA1\u597D\u5143\u7D20\u6570\u91CF\uFF0C\u8FD8\u9700\u8981\u52A0\u4E0A\u4E00\u5B9A\u7684\u5197\u4F59\u7A7A\u95F4\u4EE5\u907F\u514D\u5B9E\u9645\u5143\u7D20\u53EF\u80FD\u4F1A\u610F\u5916\u9AD8\u51FA\u4F30\u8BA1\u503C\u5F88\u591A\u3002</p><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u7684<code>error_rate</code>\u8D8A\u5C0F\uFF0C\u9700\u8981\u7684\u5B58\u50A8\u7A7A\u95F4\u5C31\u8D8A\u5927\uFF0C\u5BF9\u4E8E\u4E0D\u9700\u8981\u8FC7\u4E8E\u7CBE\u786E\u7684\u573A\u5408\uFF0C<code>error_rate</code>\u8BBE\u7F6E\u7A0D\u5927\u4E00\u70B9\u4E5F\u65E0\u4F24\u5927\u96C5\u3002\u6BD4\u5982\u5728\u65B0\u95FB\u53BB\u91CD\u4E0A\u800C\u8A00\uFF0C\u8BEF\u5224\u7387\u9AD8\u4E00\u70B9\u53EA\u4F1A\u8BA9\u5C0F\u90E8\u5206\u6587\u7AE0\u4E0D\u80FD\u8BA9\u5408\u9002\u7684\u4EBA\u770B\u5230\uFF0C\u6587\u7AE0\u7684\u6574\u4F53\u9605\u8BFB\u91CF\u4E0D\u4F1A\u56E0\u4E3A\u8FD9\u70B9\u8BEF\u5224\u7387\u5C31\u5E26\u6765\u5DE8\u5927\u7684\u6539\u53D8\u3002</p><h2 id="\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406" tabindex="-1">\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406 <a class="header-anchor" href="#\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406" aria-hidden="true">#</a></h2><p>\u5B66\u4F1A\u4E86\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u4F7F\u7528\uFF0C\u4E0B\u9762\u6709\u5FC5\u8981\u628A\u539F\u7406\u89E3\u91CA\u4E00\u4E0B\uFF0C\u4E0D\u7136\u8BFB\u8005\u8FD8\u4F1A\u7EE7\u7EED\u8499\u5728\u9F13\u91CC</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/4/16464301a0e26416~tplv-t2oaga2asx-image.image" alt=""></p><p>\u6BCF\u4E2A\u5E03\u9686\u8FC7\u6EE4\u5668\u5BF9\u5E94\u5230 Redis \u7684\u6570\u636E\u7ED3\u6784\u91CC\u9762\u5C31\u662F\u4E00\u4E2A\u5927\u578B\u7684\u4F4D\u6570\u7EC4\u548C\u51E0\u4E2A\u4E0D\u4E00\u6837\u7684\u65E0\u504F hash \u51FD\u6570\u3002\u6240\u8C13\u65E0\u504F\u5C31\u662F\u80FD\u591F\u628A\u5143\u7D20\u7684 hash \u503C\u7B97\u5F97\u6BD4\u8F83\u5747\u5300\u3002</p><p>\u5411\u5E03\u9686\u8FC7\u6EE4\u5668\u4E2D\u6DFB\u52A0 key \u65F6\uFF0C\u4F1A\u4F7F\u7528\u591A\u4E2A hash \u51FD\u6570\u5BF9 key \u8FDB\u884C hash \u7B97\u5F97\u4E00\u4E2A\u6574\u6570\u7D22\u5F15\u503C\u7136\u540E\u5BF9\u4F4D\u6570\u7EC4\u957F\u5EA6\u8FDB\u884C\u53D6\u6A21\u8FD0\u7B97\u5F97\u5230\u4E00\u4E2A\u4F4D\u7F6E\uFF0C\u6BCF\u4E2A hash \u51FD\u6570\u90FD\u4F1A\u7B97\u5F97\u4E00\u4E2A\u4E0D\u540C\u7684\u4F4D\u7F6E\u3002\u518D\u628A\u4F4D\u6570\u7EC4\u7684\u8FD9\u51E0\u4E2A\u4F4D\u7F6E\u90FD\u7F6E\u4E3A 1 \u5C31\u5B8C\u6210\u4E86 add \u64CD\u4F5C\u3002</p><p>\u5411\u5E03\u9686\u8FC7\u6EE4\u5668\u8BE2\u95EE key \u662F\u5426\u5B58\u5728\u65F6\uFF0C\u8DDF add \u4E00\u6837\uFF0C\u4E5F\u4F1A\u628A hash \u7684\u51E0\u4E2A\u4F4D\u7F6E\u90FD\u7B97\u51FA\u6765\uFF0C\u770B\u770B\u4F4D\u6570\u7EC4\u4E2D\u8FD9\u51E0\u4E2A\u4F4D\u7F6E\u662F\u5426\u90FD\u4E3A 1\uFF0C\u53EA\u8981\u6709\u4E00\u4E2A\u4F4D\u4E3A 0\uFF0C\u90A3\u4E48\u8BF4\u660E\u5E03\u9686\u8FC7\u6EE4\u5668\u4E2D\u8FD9\u4E2A key \u4E0D\u5B58\u5728\u3002\u5982\u679C\u90FD\u662F 1\uFF0C\u8FD9\u5E76\u4E0D\u80FD\u8BF4\u660E\u8FD9\u4E2A key \u5C31\u4E00\u5B9A\u5B58\u5728\uFF0C\u53EA\u662F\u6781\u6709\u53EF\u80FD\u5B58\u5728\uFF0C\u56E0\u4E3A\u8FD9\u4E9B\u4F4D\u88AB\u7F6E\u4E3A 1 \u53EF\u80FD\u662F\u56E0\u4E3A\u5176\u5B83\u7684 key \u5B58\u5728\u6240\u81F4\u3002\u5982\u679C\u8FD9\u4E2A\u4F4D\u6570\u7EC4\u6BD4\u8F83\u7A00\u758F\uFF0C\u5224\u65AD\u6B63\u786E\u7684\u6982\u7387\u5C31\u4F1A\u5F88\u5927\uFF0C\u5982\u679C\u8FD9\u4E2A\u4F4D\u6570\u7EC4\u6BD4\u8F83\u62E5\u6324\uFF0C\u5224\u65AD\u6B63\u786E\u7684\u6982\u7387\u5C31\u4F1A\u964D\u4F4E\u3002\u5177\u4F53\u7684\u6982\u7387\u8BA1\u7B97\u516C\u5F0F\u6BD4\u8F83\u590D\u6742\uFF0C\u611F\u5174\u8DA3\u53EF\u4EE5\u9605\u8BFB\u6269\u5C55\u9605\u8BFB\uFF0C\u975E\u5E38\u70E7\u8111\uFF0C\u4E0D\u5EFA\u8BAE\u8BFB\u8005\u7EC6\u770B\u3002</p><p>\u4F7F\u7528\u65F6\u4E0D\u8981\u8BA9\u5B9E\u9645\u5143\u7D20\u8FDC\u5927\u4E8E\u521D\u59CB\u5316\u5927\u5C0F\uFF0C\u5F53\u5B9E\u9645\u5143\u7D20\u5F00\u59CB\u8D85\u51FA\u521D\u59CB\u5316\u5927\u5C0F\u65F6\uFF0C\u5E94\u8BE5\u5BF9\u5E03\u9686\u8FC7\u6EE4\u5668\u8FDB\u884C\u91CD\u5EFA\uFF0C\u91CD\u65B0\u5206\u914D\u4E00\u4E2A size \u66F4\u5927\u7684\u8FC7\u6EE4\u5668\uFF0C\u518D\u5C06\u6240\u6709\u7684\u5386\u53F2\u5143\u7D20\u6279\u91CF add \u8FDB\u53BB (\u8FD9\u5C31\u8981\u6C42\u6211\u4EEC\u5728\u5176\u5B83\u7684\u5B58\u50A8\u5668\u4E2D\u8BB0\u5F55\u6240\u6709\u7684\u5386\u53F2\u5143\u7D20)\u3002\u56E0\u4E3A error_rate \u4E0D\u4F1A\u56E0\u4E3A\u6570\u91CF\u8D85\u51FA\u5C31\u6025\u5267\u589E\u52A0\uFF0C\u8FD9\u5C31\u7ED9\u6211\u4EEC\u91CD\u5EFA\u8FC7\u6EE4\u5668\u63D0\u4F9B\u4E86\u8F83\u4E3A\u5BBD\u677E\u7684\u65F6\u95F4\u3002</p><h2 id="\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1" tabindex="-1">\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1 <a class="header-anchor" href="#\u7A7A\u95F4\u5360\u7528\u4F30\u8BA1" aria-hidden="true">#</a></h2><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u7A7A\u95F4\u5360\u7528\u6709\u4E00\u4E2A\u7B80\u5355\u7684\u8BA1\u7B97\u516C\u5F0F\uFF0C\u4F46\u662F\u63A8\u5BFC\u6BD4\u8F83\u7E41\u7410\uFF0C\u8FD9\u91CC\u5C31\u7701\u53BB\u63A8\u5BFC\u8FC7\u7A0B\u4E86\uFF0C\u76F4\u63A5\u5F15\u51FA\u8BA1\u7B97\u516C\u5F0F\uFF0C\u611F\u5174\u8DA3\u7684\u8BFB\u8005\u53EF\u4EE5\u70B9\u51FB\u300C\u6269\u5C55\u9605\u8BFB\u300D\u6DF1\u5165\u7406\u89E3\u516C\u5F0F\u7684\u63A8\u5BFC\u8FC7\u7A0B\u3002</p><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u6709\u4E24\u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F\u9884\u8BA1\u5143\u7D20\u7684\u6570\u91CF n\uFF0C\u7B2C\u4E8C\u4E2A\u662F\u9519\u8BEF\u7387 f\u3002\u516C\u5F0F\u6839\u636E\u8FD9\u4E24\u4E2A\u8F93\u5165\u5F97\u5230\u4E24\u4E2A\u8F93\u51FA\uFF0C\u7B2C\u4E00\u4E2A\u8F93\u51FA\u662F\u4F4D\u6570\u7EC4\u7684\u957F\u5EA6 l\uFF0C\u4E5F\u5C31\u662F\u9700\u8981\u7684\u5B58\u50A8\u7A7A\u95F4\u5927\u5C0F (bit)\uFF0C\u7B2C\u4E8C\u4E2A\u8F93\u51FA\u662F hash \u51FD\u6570\u7684\u6700\u4F73\u6570\u91CF k\u3002hash \u51FD\u6570\u7684\u6570\u91CF\u4E5F\u4F1A\u76F4\u63A5\u5F71\u54CD\u5230\u9519\u8BEF\u7387\uFF0C\u6700\u4F73\u7684\u6570\u91CF\u4F1A\u6709\u6700\u4F4E\u7684\u9519\u8BEF\u7387\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">k=0.7*(l/n)  # \u7EA6\u7B49\u4E8E</span></span>
<span class="line"><span style="color:#A6ACCD;">f=0.6185^(l/n)  # ^ \u8868\u793A\u6B21\u65B9\u8BA1\u7B97\uFF0C\u4E5F\u5C31\u662F math.pow</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4ECE\u516C\u5F0F\u4E2D\u53EF\u4EE5\u770B\u51FA</p><ol><li>\u4F4D\u6570\u7EC4\u76F8\u5BF9\u8D8A\u957F (l/n)\uFF0C\u9519\u8BEF\u7387 f \u8D8A\u4F4E\uFF0C\u8FD9\u4E2A\u548C\u76F4\u89C2\u4E0A\u7406\u89E3\u662F\u4E00\u81F4\u7684</li><li>\u4F4D\u6570\u7EC4\u76F8\u5BF9\u8D8A\u957F (l/n)\uFF0Chash \u51FD\u6570\u9700\u8981\u7684\u6700\u4F73\u6570\u91CF\u4E5F\u8D8A\u591A\uFF0C\u5F71\u54CD\u8BA1\u7B97\u6548\u7387</li><li>\u5F53\u4E00\u4E2A\u5143\u7D20\u5E73\u5747\u9700\u8981 1 \u4E2A\u5B57\u8282 (8bit) \u7684\u6307\u7EB9\u7A7A\u95F4\u65F6 (l/n=8)\uFF0C\u9519\u8BEF\u7387\u5927\u7EA6\u4E3A 2%</li><li>\u9519\u8BEF\u7387\u4E3A 10%\uFF0C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u7684\u5E73\u5747\u6307\u7EB9\u7A7A\u95F4\u4E3A 4.792 \u4E2A bit\uFF0C\u5927\u7EA6\u4E3A 5bit</li><li>\u9519\u8BEF\u7387\u4E3A 1%\uFF0C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u7684\u5E73\u5747\u6307\u7EB9\u7A7A\u95F4\u4E3A 9.585 \u4E2A bit\uFF0C\u5927\u7EA6\u4E3A 10bit</li><li>\u9519\u8BEF\u7387\u4E3A 0.1%\uFF0C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u7684\u5E73\u5747\u6307\u7EB9\u7A7A\u95F4\u4E3A 14.377 \u4E2A bit\uFF0C\u5927\u7EA6\u4E3A 15bit</li></ol><p>\u4F60\u4E5F\u8BB8\u4F1A\u60F3\uFF0C\u5982\u679C\u4E00\u4E2A\u5143\u7D20\u9700\u8981\u5360\u636E 15 \u4E2A bit\uFF0C\u90A3\u76F8\u5BF9 set \u96C6\u5408\u7684\u7A7A\u95F4\u4F18\u52BF\u662F\u4E0D\u662F\u5C31\u6CA1\u6709\u90A3\u4E48\u660E\u663E\u4E86\uFF1F\u8FD9\u91CC\u9700\u8981\u660E\u786E\u7684\u662F\uFF0Cset \u4E2D\u4F1A\u5B58\u50A8\u6BCF\u4E2A\u5143\u7D20\u7684\u5185\u5BB9\uFF0C\u800C\u5E03\u9686\u8FC7\u6EE4\u5668\u4EC5\u4EC5\u5B58\u50A8\u5143\u7D20\u7684\u6307\u7EB9\u3002\u5143\u7D20\u7684\u5185\u5BB9\u5927\u5C0F\u5C31\u662F\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\uFF0C\u5B83\u4E00\u822C\u4F1A\u6709\u591A\u4E2A\u5B57\u8282\uFF0C\u751A\u81F3\u662F\u51E0\u5341\u4E2A\u4E0A\u767E\u4E2A\u5B57\u8282\uFF0C\u6BCF\u4E2A\u5143\u7D20\u672C\u8EAB\u8FD8\u9700\u8981\u4E00\u4E2A\u6307\u9488\u88AB set \u96C6\u5408\u6765\u5F15\u7528\uFF0C\u8FD9\u4E2A\u6307\u9488\u53C8\u4F1A\u5360\u53BB 4 \u4E2A\u5B57\u8282\u6216 8 \u4E2A\u5B57\u8282\uFF0C\u53D6\u51B3\u4E8E\u7CFB\u7EDF\u662F 32bit \u8FD8\u662F 64bit\u3002\u800C\u6307\u7EB9\u7A7A\u95F4\u53EA\u6709\u63A5\u8FD1 2 \u4E2A\u5B57\u8282\uFF0C\u6240\u4EE5\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u7A7A\u95F4\u4F18\u52BF\u8FD8\u662F\u975E\u5E38\u660E\u663E\u7684\u3002</p><p>\u5982\u679C\u8BFB\u8005\u89C9\u5F97\u516C\u5F0F\u8BA1\u7B97\u8D77\u6765\u592A\u9EBB\u70E6\uFF0C\u4E5F\u6CA1\u6709\u5173\u7CFB\uFF0C\u6709\u5F88\u591A\u73B0\u6210\u7684\u7F51\u7AD9\u5DF2\u7ECF\u652F\u6301\u8BA1\u7B97\u7A7A\u95F4\u5360\u7528\u7684\u529F\u80FD\u4E86\uFF0C\u6211\u4EEC\u53EA\u8981\u628A\u53C2\u6570\u8F93\u8FDB\u53BB\uFF0C\u5C31\u53EF\u4EE5\u76F4\u63A5\u770B\u5230\u7ED3\u679C\uFF0C\u6BD4\u5982 <a href="https://krisives.github.io/bloom-calculator/" target="_blank" rel="noreferrer">\u5E03\u9686\u8BA1\u7B97\u5668</a>\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/4/16464885cf1f74c2~tplv-t2oaga2asx-image.image" alt=""></p><h2 id="\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316" tabindex="-1">\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316 <a class="header-anchor" href="#\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u65F6\uFF0C\u8BEF\u5224\u7387\u4F1A\u600E\u6837\u53D8\u5316" aria-hidden="true">#</a></h2><p>\u5F53\u5B9E\u9645\u5143\u7D20\u8D85\u51FA\u9884\u8BA1\u5143\u7D20\u65F6\uFF0C\u9519\u8BEF\u7387\u4F1A\u6709\u591A\u5927\u53D8\u5316\uFF0C\u5B83\u4F1A\u6025\u5267\u4E0A\u5347\u4E48\uFF0C\u8FD8\u662F\u5E73\u7F13\u5730\u4E0A\u5347\uFF0C\u8FD9\u5C31\u9700\u8981\u53E6\u5916\u4E00\u4E2A\u516C\u5F0F\uFF0C\u5F15\u5165\u53C2\u6570 t \u8868\u793A\u5B9E\u9645\u5143\u7D20\u548C\u9884\u8BA1\u5143\u7D20\u7684\u500D\u6570 t</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">f=(1-0.5^t)^k  # \u6781\u9650\u8FD1\u4F3C\uFF0Ck \u662F hash \u51FD\u6570\u7684\u6700\u4F73\u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F53 t \u589E\u5927\u65F6\uFF0C\u9519\u8BEF\u7387\uFF0Cf \u4E5F\u4F1A\u8DDF\u7740\u589E\u5927\uFF0C\u5206\u522B\u9009\u62E9\u9519\u8BEF\u7387\u4E3A 10%,1%,0.1% \u7684 k \u503C\uFF0C\u753B\u51FA\u5B83\u7684\u66F2\u7EBF\u8FDB\u884C\u76F4\u89C2\u89C2\u5BDF</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/5/164685454156e8e2~tplv-t2oaga2asx-image.image" alt=""></p><p>\u4ECE\u8FD9\u4E2A\u56FE\u4E2D\u53EF\u4EE5\u770B\u51FA\u66F2\u7EBF\u8FD8\u662F\u6BD4\u8F83\u9661\u5CED\u7684</p><ol><li>\u9519\u8BEF\u7387\u4E3A 10% \u65F6\uFF0C\u500D\u6570\u6BD4\u4E3A 2 \u65F6\uFF0C\u9519\u8BEF\u7387\u5C31\u4F1A\u5347\u81F3\u63A5\u8FD1 40%\uFF0C\u8FD9\u4E2A\u5C31\u6BD4\u8F83\u5371\u9669\u4E86</li><li>\u9519\u8BEF\u7387\u4E3A 1% \u65F6\uFF0C\u500D\u6570\u6BD4\u4E3A 2 \u65F6\uFF0C\u9519\u8BEF\u7387\u5347\u81F3 15%\uFF0C\u4E5F\u633A\u53EF\u6015\u7684</li><li>\u9519\u8BEF\u7387\u4E3A 0.1%\uFF0C\u500D\u6570\u6BD4\u4E3A 2 \u65F6\uFF0C\u9519\u8BEF\u7387\u5347\u81F3 5%\uFF0C\u4E5F\u6BD4\u8F83\u60AC\u4E86</li></ol><h2 id="\u7528\u4E0D\u4E0A-redis4-0-\u600E\u4E48\u529E\uFF1F" tabindex="-1">\u7528\u4E0D\u4E0A Redis4.0 \u600E\u4E48\u529E\uFF1F <a class="header-anchor" href="#\u7528\u4E0D\u4E0A-redis4-0-\u600E\u4E48\u529E\uFF1F" aria-hidden="true">#</a></h2><p>Redis 4.0 \u4E4B\u524D\u4E5F\u6709\u7B2C\u4E09\u65B9\u7684\u5E03\u9686\u8FC7\u6EE4\u5668 lib \u4F7F\u7528\uFF0C\u53EA\u4E0D\u8FC7\u5728\u5B9E\u73B0\u4E0A\u4F7F\u7528 redis \u7684\u4F4D\u56FE\u6765\u5B9E\u73B0\u7684\uFF0C\u6027\u80FD\u4E0A\u4E5F\u8981\u5DEE\u4E0D\u5C11\u3002\u6BD4\u5982\u4E00\u6B21 exists \u67E5\u8BE2\u4F1A\u6D89\u53CA\u5230\u591A\u6B21 getbit \u64CD\u4F5C\uFF0C\u7F51\u7EDC\u5F00\u9500\u76F8\u6BD4\u800C\u8A00\u4F1A\u9AD8\u51FA\u4E0D\u5C11\u3002\u53E6\u5916\u5728\u5B9E\u73B0\u4E0A\u8FD9\u4E9B\u7B2C\u4E09\u65B9 lib \u4E5F\u4E0D\u5C3D\u5B8C\u7F8E\uFF0C\u6BD4\u5982 pyrebloom \u5E93\u5C31\u4E0D\u652F\u6301\u91CD\u8FDE\u548C\u91CD\u8BD5\uFF0C\u5728\u4F7F\u7528\u65F6\u9700\u8981\u5BF9\u5B83\u505A\u4E00\u5C42\u5C01\u88C5\u540E\u624D\u80FD\u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u4F7F\u7528\u3002</p><ol><li><a href="https://github.com/robinhoodmarkets/pyreBloom" target="_blank" rel="noreferrer">Python Redis Bloom Filter</a></li><li><a href="https://github.com/Baqend/Orestes-Bloomfilter" target="_blank" rel="noreferrer">Java Redis Bloom Filter</a></li></ol><h2 id="\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528" tabindex="-1">\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528 <a class="header-anchor" href="#\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u5176\u5B83\u5E94\u7528" aria-hidden="true">#</a></h2><p>\u5728\u722C\u866B\u7CFB\u7EDF\u4E2D\uFF0C\u6211\u4EEC\u9700\u8981\u5BF9 URL \u8FDB\u884C\u53BB\u91CD\uFF0C\u5DF2\u7ECF\u722C\u8FC7\u7684\u7F51\u9875\u5C31\u53EF\u4EE5\u4E0D\u7528\u722C\u4E86\u3002\u4F46\u662F URL \u592A\u591A\u4E86\uFF0C\u51E0\u5343\u4E07\u51E0\u4E2A\u4EBF\uFF0C\u5982\u679C\u7528\u4E00\u4E2A\u96C6\u5408\u88C5\u4E0B\u8FD9\u4E9B URL \u5730\u5740\u90A3\u662F\u975E\u5E38\u6D6A\u8D39\u7A7A\u95F4\u7684\u3002\u8FD9\u65F6\u5019\u5C31\u53EF\u4EE5\u8003\u8651\u4F7F\u7528\u5E03\u9686\u8FC7\u6EE4\u5668\u3002\u5B83\u53EF\u4EE5\u5927\u5E45\u964D\u4F4E\u53BB\u91CD\u5B58\u50A8\u6D88\u8017\uFF0C\u53EA\u4E0D\u8FC7\u4E5F\u4F1A\u4F7F\u5F97\u722C\u866B\u7CFB\u7EDF\u9519\u8FC7\u5C11\u91CF\u7684\u9875\u9762\u3002</p><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u5728 NoSQL \u6570\u636E\u5E93\u9886\u57DF\u4F7F\u7528\u975E\u5E38\u5E7F\u6CDB\uFF0C\u6211\u4EEC\u5E73\u65F6\u7528\u5230\u7684 HBase\u3001Cassandra \u8FD8\u6709 LevelDB\u3001RocksDB \u5185\u90E8\u90FD\u6709\u5E03\u9686\u8FC7\u6EE4\u5668\u7ED3\u6784\uFF0C\u5E03\u9686\u8FC7\u6EE4\u5668\u53EF\u4EE5\u663E\u8457\u964D\u4F4E\u6570\u636E\u5E93\u7684 IO \u8BF7\u6C42\u6570\u91CF\u3002\u5F53\u7528\u6237\u6765\u67E5\u8BE2\u67D0\u4E2A row \u65F6\uFF0C\u53EF\u4EE5\u5148\u901A\u8FC7\u5185\u5B58\u4E2D\u7684\u5E03\u9686\u8FC7\u6EE4\u5668\u8FC7\u6EE4\u6389\u5927\u91CF\u4E0D\u5B58\u5728\u7684 row \u8BF7\u6C42\uFF0C\u7136\u540E\u518D\u53BB\u78C1\u76D8\u8FDB\u884C\u67E5\u8BE2\u3002</p><p>\u90AE\u7BB1\u7CFB\u7EDF\u7684\u5783\u573E\u90AE\u4EF6\u8FC7\u6EE4\u529F\u80FD\u4E5F\u666E\u904D\u7528\u5230\u4E86\u5E03\u9686\u8FC7\u6EE4\u5668\uFF0C\u56E0\u4E3A\u7528\u4E86\u8FD9\u4E2A\u8FC7\u6EE4\u5668\uFF0C\u6240\u4EE5\u5E73\u65F6\u4E5F\u4F1A\u9047\u5230\u67D0\u4E9B\u6B63\u5E38\u7684\u90AE\u4EF6\u88AB\u653E\u8FDB\u4E86\u5783\u573E\u90AE\u4EF6\u76EE\u5F55\u4E2D\uFF0C\u8FD9\u4E2A\u5C31\u662F\u8BEF\u5224\u6240\u81F4\uFF0C\u6982\u7387\u5F88\u4F4E\u3002</p><h2 id="\u6269\u5C55\u9605\u8BFB" tabindex="-1">\u6269\u5C55\u9605\u8BFB <a class="header-anchor" href="#\u6269\u5C55\u9605\u8BFB" aria-hidden="true">#</a></h2><p>\u5E03\u9686\u8FC7\u6EE4\u5668\u7684\u539F\u7406\u6D89\u53CA\u5230\u8F83\u4E3A\u590D\u6742\u7684\u6570\u5B66\u77E5\u8BC6\uFF0C\u611F\u5174\u8DA3\u53EF\u4EE5\u9605\u8BFB\u4E0B\u9762\u7684\u94FE\u63A5\u6587\u7AE0\u7EE7\u7EED\u6DF1\u5165\u4E86\u89E3\u5185\u90E8\u539F\u7406\uFF1A<a href="http://www.cnblogs.com/allensun/archive/2011/02/16/1956532.html" target="_blank" rel="noreferrer">\u5E03\u9686\u8FC7\u6EE4\u5668</a>\u3002</p><p>\u540C\u6837\uFF0C\u5982\u679C\u4F60\u662F\u4E2A\u6570\u5B66\u5B66\u6E23\uFF0C\u90A3\u8001\u5E08\u6211\u5EFA\u8BAE\u4F60\u8C28\u614E\u89C2\u770B\uFF0C\u8981\u6CE8\u610F\u4FDD\u62A4\u597D\u81EA\u5DF1\u7684 24K \u949B\u5408\u91D1\u72D7\u773C\uFF0C\u907F\u514D\u95EA\u778E\u3002</p>`,85),o=[p];function t(c,r,i,C,A,d){return a(),n("div",null,o)}const D=s(e,[["render",t]]);export{y as __pageData,D as default};
