import{_ as s,c as n,o as a,d as l}from"./app.e5528619.js";const y=JSON.parse('{"title":"\u6E90\u7801 4-\u98CE\u9A70\u7535\u63A3 \u2014\u2014 \u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u6BCF\u4E2A ziplist \u5B58\u591A\u5C11\u5143\u7D20\uFF1F","slug":"\u6BCF\u4E2A-ziplist-\u5B58\u591A\u5C11\u5143\u7D20\uFF1F","link":"#\u6BCF\u4E2A-ziplist-\u5B58\u591A\u5C11\u5143\u7D20\uFF1F","children":[]},{"level":2,"title":"\u538B\u7F29\u6DF1\u5EA6","slug":"\u538B\u7F29\u6DF1\u5EA6","link":"#\u538B\u7F29\u6DF1\u5EA6","children":[]},{"level":2,"title":"\u6269\u5C55\u9605\u8BFB","slug":"\u6269\u5C55\u9605\u8BFB","link":"#\u6269\u5C55\u9605\u8BFB","children":[]}],"relativePath":"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 4-\u98CE\u9A70\u7535\u63A3 \u2014\u2014 \u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8.md"}'),e={name:"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 4-\u98CE\u9A70\u7535\u63A3 \u2014\u2014 \u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8.md"},p=l(`<h1 id="\u6E90\u7801-4-\u98CE\u9A70\u7535\u63A3-\u2014\u2014-\u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8" tabindex="-1">\u6E90\u7801 4-\u98CE\u9A70\u7535\u63A3 \u2014\u2014 \u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8 <a class="header-anchor" href="#\u6E90\u7801-4-\u98CE\u9A70\u7535\u63A3-\u2014\u2014-\u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8" aria-hidden="true">#</a></h1><hr><h1 id="\u6E90\u7801-4\uFF1A\u98CE\u9A70\u7535\u63A3-\u2014\u2014-\u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8" tabindex="-1">\u6E90\u7801 4\uFF1A\u98CE\u9A70\u7535\u63A3 \u2014\u2014 \u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8 <a class="header-anchor" href="#\u6E90\u7801-4\uFF1A\u98CE\u9A70\u7535\u63A3-\u2014\u2014-\u63A2\u7D22\u300C\u5FEB\u901F\u5217\u8868\u300D\u5185\u90E8" aria-hidden="true">#</a></h1><p>Redis \u65E9\u671F\u7248\u672C\u5B58\u50A8 list \u5217\u8868\u6570\u636E\u7ED3\u6784\u4F7F\u7528\u7684\u662F\u538B\u7F29\u5217\u8868 ziplist \u548C\u666E\u901A\u7684\u53CC\u5411\u94FE\u8868 linkedlist\uFF0C\u4E5F\u5C31\u662F\u5143\u7D20\u5C11\u65F6\u7528 ziplist\uFF0C\u5143\u7D20\u591A\u65F6\u7528 linkedlist\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">// \u94FE\u8868\u7684\u8282\u70B9</span></span>
<span class="line"><span style="color:#A6ACCD;">struct listNode&lt;T&gt; {</span></span>
<span class="line"><span style="color:#A6ACCD;">    listNode* prev;</span></span>
<span class="line"><span style="color:#A6ACCD;">    listNode* next;</span></span>
<span class="line"><span style="color:#A6ACCD;">    T value;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">// \u94FE\u8868</span></span>
<span class="line"><span style="color:#A6ACCD;">struct list {</span></span>
<span class="line"><span style="color:#A6ACCD;">    listNode *head;</span></span>
<span class="line"><span style="color:#A6ACCD;">    listNode *tail;</span></span>
<span class="line"><span style="color:#A6ACCD;">    long length;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8003\u8651\u5230\u94FE\u8868\u7684\u9644\u52A0\u7A7A\u95F4\u76F8\u5BF9\u592A\u9AD8\uFF0Cprev \u548C next \u6307\u9488\u5C31\u8981\u5360\u53BB 16 \u4E2A\u5B57\u8282 (64bit \u7CFB\u7EDF\u7684\u6307\u9488\u662F 8 \u4E2A\u5B57\u8282)\uFF0C\u53E6\u5916\u6BCF\u4E2A\u8282\u70B9\u7684\u5185\u5B58\u90FD\u662F\u5355\u72EC\u5206\u914D\uFF0C\u4F1A\u52A0\u5267\u5185\u5B58\u7684\u788E\u7247\u5316\uFF0C\u5F71\u54CD\u5185\u5B58\u7BA1\u7406\u6548\u7387\u3002\u540E\u7EED\u7248\u672C\u5BF9\u5217\u8868\u6570\u636E\u7ED3\u6784\u8FDB\u884C\u4E86\u6539\u9020\uFF0C\u4F7F\u7528 quicklist \u4EE3\u66FF\u4E86 ziplist \u548C linkedlist\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; rpush codehole go java python</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 3</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; debug object codehole</span></span>
<span class="line"><span style="color:#A6ACCD;">Value at:0x7fec2dc2bde0 refcount:1 encoding:quicklist serializedlength:31 lru:6101643 lru_seconds_idle:5 ql_nodes:1 ql_avg_node:3.00 ql_ziplist_max:-2 ql_compressed:0 ql_uncompressed_size:29</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6CE8\u610F\u89C2\u5BDF\u4E0A\u9762\u8F93\u51FA\u5B57\u6BB5 encoding \u7684\u503C\u3002quicklist \u662F ziplist \u548C linkedlist \u7684\u6DF7\u5408\u4F53\uFF0C\u5B83\u5C06 linkedlist \u6309\u6BB5\u5207\u5206\uFF0C\u6BCF\u4E00\u6BB5\u4F7F\u7528 ziplist \u6765\u7D27\u51D1\u5B58\u50A8\uFF0C\u591A\u4E2A ziplist \u4E4B\u95F4\u4F7F\u7528\u53CC\u5411\u6307\u9488\u4E32\u63A5\u8D77\u6765\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/29/164e3b0b953f2fc7~tplv-t2oaga2asx-image.image" alt=""></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">struct ziplist {</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">struct ziplist_compressed {</span></span>
<span class="line"><span style="color:#A6ACCD;">    int32 size;</span></span>
<span class="line"><span style="color:#A6ACCD;">    byte[] compressed_data;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">struct quicklistNode {</span></span>
<span class="line"><span style="color:#A6ACCD;">    quicklistNode* prev;</span></span>
<span class="line"><span style="color:#A6ACCD;">    quicklistNode* next;</span></span>
<span class="line"><span style="color:#A6ACCD;">    ziplist* zl; // \u6307\u5411\u538B\u7F29\u5217\u8868</span></span>
<span class="line"><span style="color:#A6ACCD;">    int32 size; // ziplist \u7684\u5B57\u8282\u603B\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">    int16 count; // ziplist \u4E2D\u7684\u5143\u7D20\u6570\u91CF</span></span>
<span class="line"><span style="color:#A6ACCD;">    int2 encoding; // \u5B58\u50A8\u5F62\u5F0F 2bit\uFF0C\u539F\u751F\u5B57\u8282\u6570\u7EC4\u8FD8\u662F LZF \u538B\u7F29\u5B58\u50A8</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">struct quicklist {</span></span>
<span class="line"><span style="color:#A6ACCD;">    quicklistNode* head;</span></span>
<span class="line"><span style="color:#A6ACCD;">    quicklistNode* tail;</span></span>
<span class="line"><span style="color:#A6ACCD;">    long count; // \u5143\u7D20\u603B\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">    int nodes; // ziplist \u8282\u70B9\u7684\u4E2A\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">    int compressDepth; // LZF \u7B97\u6CD5\u538B\u7F29\u6DF1\u5EA6</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4E0A\u8FF0\u4EE3\u7801\u7B80\u5355\u5730\u8868\u793A\u4E86 quicklist \u7684\u5927\u81F4\u7ED3\u6784\u3002\u4E3A\u4E86\u8FDB\u4E00\u6B65\u8282\u7EA6\u7A7A\u95F4\uFF0CRedis \u8FD8\u4F1A\u5BF9 ziplist \u8FDB\u884C\u538B\u7F29\u5B58\u50A8\uFF0C\u4F7F\u7528 LZF \u7B97\u6CD5\u538B\u7F29\uFF0C\u53EF\u4EE5\u9009\u62E9\u538B\u7F29\u6DF1\u5EA6\u3002</p><h2 id="\u6BCF\u4E2A-ziplist-\u5B58\u591A\u5C11\u5143\u7D20\uFF1F" tabindex="-1">\u6BCF\u4E2A ziplist \u5B58\u591A\u5C11\u5143\u7D20\uFF1F <a class="header-anchor" href="#\u6BCF\u4E2A-ziplist-\u5B58\u591A\u5C11\u5143\u7D20\uFF1F" aria-hidden="true">#</a></h2><p>quicklist \u5185\u90E8\u9ED8\u8BA4\u5355\u4E2A ziplist \u957F\u5EA6\u4E3A 8k \u5B57\u8282\uFF0C\u8D85\u51FA\u4E86\u8FD9\u4E2A\u5B57\u8282\u6570\uFF0C\u5C31\u4F1A\u65B0\u8D77\u4E00\u4E2A ziplist\u3002ziplist \u7684\u957F\u5EA6\u7531\u914D\u7F6E\u53C2\u6570<code>list-max-ziplist-size</code>\u51B3\u5B9A\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># Lists are also encoded in a special way to save a lot of space.</span></span>
<span class="line"><span style="color:#A6ACCD;"># The number of entries allowed per internal list node can be specified</span></span>
<span class="line"><span style="color:#A6ACCD;"># as a fixed maximum size or a maximum number of elements.</span></span>
<span class="line"><span style="color:#A6ACCD;"># For a fixed maximum size, use -5 through -1, meaning:</span></span>
<span class="line"><span style="color:#A6ACCD;"># -5: max size: 64 Kb  &lt;-- not recommended for normal workloads</span></span>
<span class="line"><span style="color:#A6ACCD;"># -4: max size: 32 Kb  &lt;-- not recommended</span></span>
<span class="line"><span style="color:#A6ACCD;"># -3: max size: 16 Kb  &lt;-- probably not recommended</span></span>
<span class="line"><span style="color:#A6ACCD;"># -2: max size: 8 Kb   &lt;-- good</span></span>
<span class="line"><span style="color:#A6ACCD;"># -1: max size: 4 Kb   &lt;-- good</span></span>
<span class="line"><span style="color:#A6ACCD;"># Positive numbers mean store up to _exactly_ that number of elements</span></span>
<span class="line"><span style="color:#A6ACCD;"># per list node.</span></span>
<span class="line"><span style="color:#A6ACCD;"># The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),</span></span>
<span class="line"><span style="color:#A6ACCD;"># but if your use case is unique, adjust the settings as necessary.</span></span>
<span class="line"><span style="color:#A6ACCD;">list-max-ziplist-size -2</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u538B\u7F29\u6DF1\u5EA6" tabindex="-1">\u538B\u7F29\u6DF1\u5EA6 <a class="header-anchor" href="#\u538B\u7F29\u6DF1\u5EA6" aria-hidden="true">#</a></h2><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/7/29/164e3d168aa62cc9~tplv-t2oaga2asx-image.image" alt=""></p><p>quicklist \u9ED8\u8BA4\u7684\u538B\u7F29\u6DF1\u5EA6\u662F 0\uFF0C\u4E5F\u5C31\u662F\u4E0D\u538B\u7F29\u3002\u538B\u7F29\u7684\u5B9E\u9645\u6DF1\u5EA6\u7531\u914D\u7F6E\u53C2\u6570<code>list-compress-depth</code>\u51B3\u5B9A\u3002\u4E3A\u4E86\u652F\u6301\u5FEB\u901F\u7684 push/pop \u64CD\u4F5C\uFF0Cquicklist \u7684\u9996\u5C3E\u4E24\u4E2A ziplist \u4E0D\u538B\u7F29\uFF0C\u6B64\u65F6\u6DF1\u5EA6\u5C31\u662F 1\u3002\u5982\u679C\u6DF1\u5EA6\u4E3A 2\uFF0C\u5C31\u8868\u793A quicklist \u7684\u9996\u5C3E\u7B2C\u4E00\u4E2A ziplist \u4EE5\u53CA\u9996\u5C3E\u7B2C\u4E8C\u4E2A ziplist \u90FD\u4E0D\u538B\u7F29\u3002</p><h2 id="\u6269\u5C55\u9605\u8BFB" tabindex="-1">\u6269\u5C55\u9605\u8BFB <a class="header-anchor" href="#\u6269\u5C55\u9605\u8BFB" aria-hidden="true">#</a></h2><ul><li><a href="https://matt.sh/redis-quicklist" target="_blank" rel="noreferrer">\u300Aziplist\u3001linkedlist \u548C quicklist \u7684\u6027\u80FD\u5BF9\u6BD4\u300B</a></li></ul>`,19),i=[p];function t(o,c,r,d,A,C){return a(),n("div",null,i)}const _=s(e,[["render",t]]);export{y as __pageData,_ as default};
