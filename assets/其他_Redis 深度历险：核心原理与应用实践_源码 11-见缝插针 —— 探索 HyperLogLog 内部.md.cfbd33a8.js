import{_ as s,c as n,o as a,d as p}from"./app.c4f45da1.js";const d=JSON.parse('{"title":"\u6E90\u7801 11-\u89C1\u7F1D\u63D2\u9488 \u2014\u2014 \u63A2\u7D22 HyperLogLog \u5185\u90E8","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784","slug":"\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784","link":"#\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784","children":[]},{"level":2,"title":"\u7A00\u758F\u5B58\u50A8\u7ED3\u6784","slug":"\u7A00\u758F\u5B58\u50A8\u7ED3\u6784","link":"#\u7A00\u758F\u5B58\u50A8\u7ED3\u6784","children":[]},{"level":2,"title":"\u5B58\u50A8\u8F6C\u6362","slug":"\u5B58\u50A8\u8F6C\u6362","link":"#\u5B58\u50A8\u8F6C\u6362","children":[]},{"level":2,"title":"\u8BA1\u6570\u7F13\u5B58","slug":"\u8BA1\u6570\u7F13\u5B58","link":"#\u8BA1\u6570\u7F13\u5B58","children":[]},{"level":2,"title":"\u5BF9\u8C61\u5934","slug":"\u5BF9\u8C61\u5934","link":"#\u5BF9\u8C61\u5934","children":[]}],"relativePath":"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 11-\u89C1\u7F1D\u63D2\u9488 \u2014\u2014 \u63A2\u7D22 HyperLogLog \u5185\u90E8.md"}'),l={name:"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 11-\u89C1\u7F1D\u63D2\u9488 \u2014\u2014 \u63A2\u7D22 HyperLogLog \u5185\u90E8.md"},e=p(`<h1 id="\u6E90\u7801-11-\u89C1\u7F1D\u63D2\u9488-\u2014\u2014-\u63A2\u7D22-hyperloglog-\u5185\u90E8" tabindex="-1">\u6E90\u7801 11-\u89C1\u7F1D\u63D2\u9488 \u2014\u2014 \u63A2\u7D22 HyperLogLog \u5185\u90E8 <a class="header-anchor" href="#\u6E90\u7801-11-\u89C1\u7F1D\u63D2\u9488-\u2014\u2014-\u63A2\u7D22-hyperloglog-\u5185\u90E8" aria-hidden="true">#</a></h1><hr><h1 id="\u6E90\u7801-11\uFF1A\u89C1\u7F1D\u63D2\u9488-\u2014\u2014-\u63A2\u7D22-hyperloglog-\u5185\u90E8" tabindex="-1">\u6E90\u7801 11\uFF1A\u89C1\u7F1D\u63D2\u9488 \u2014\u2014 \u63A2\u7D22 HyperLogLog \u5185\u90E8 <a class="header-anchor" href="#\u6E90\u7801-11\uFF1A\u89C1\u7F1D\u63D2\u9488-\u2014\u2014-\u63A2\u7D22-hyperloglog-\u5185\u90E8" aria-hidden="true">#</a></h1><p>HyperLogLog\u7B97\u6CD5\u662F\u4E00\u79CD\u975E\u5E38\u5DE7\u5999\u7684\u8FD1\u4F3C\u7EDF\u8BA1\u6D77\u91CF\u53BB\u91CD\u5143\u7D20\u6570\u91CF\u7684\u7B97\u6CD5\u3002\u5B83\u5185\u90E8\u7EF4\u62A4\u4E86 16384 \u4E2A\u6876\uFF08bucket\uFF09\u6765\u8BB0\u5F55\u5404\u81EA\u6876\u7684\u5143\u7D20\u6570\u91CF\u3002\u5F53\u4E00\u4E2A\u5143\u7D20\u5230\u6765\u65F6\uFF0C\u5B83\u4F1A\u6563\u5217\u5230\u5176\u4E2D\u4E00\u4E2A\u6876\uFF0C\u4EE5\u4E00\u5B9A\u7684\u6982\u7387\u5F71\u54CD\u8FD9\u4E2A\u6876\u7684\u8BA1\u6570\u503C\u3002\u56E0\u4E3A\u662F\u6982\u7387\u7B97\u6CD5\uFF0C\u6240\u4EE5\u5355\u4E2A\u6876\u7684\u8BA1\u6570\u503C\u5E76\u4E0D\u51C6\u786E\uFF0C\u4F46\u662F\u5C06\u6240\u6709\u7684\u6876\u8BA1\u6570\u503C\u8FDB\u884C\u8C03\u5408\u5747\u503C\u7D2F\u52A0\u8D77\u6765\uFF0C\u7ED3\u679C\u5C31\u4F1A\u975E\u5E38\u63A5\u8FD1\u771F\u5B9E\u7684\u8BA1\u6570\u503C\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e5a000b63be7~tplv-t2oaga2asx-image.image" alt=""></p><p>\u4E3A\u4E86\u4FBF\u4E8E\u7406\u89E3HyperLogLog\u7B97\u6CD5\uFF0C\u6211\u4EEC\u5148\u7B80\u5316\u5B83\u7684\u8BA1\u6570\u903B\u8F91\u3002\u56E0\u4E3A\u662F\u53BB\u91CD\u8BA1\u6570\uFF0C\u5982\u679C\u662F\u51C6\u786E\u7684\u53BB\u91CD\uFF0C\u80AF\u5B9A\u9700\u8981\u7528\u5230 set \u96C6\u5408\uFF0C\u4F7F\u7528\u96C6\u5408\u6765\u8BB0\u5F55\u6240\u6709\u7684\u5143\u7D20\uFF0C\u7136\u540E\u4F7F\u7528 scard \u6307\u4EE4\u6765\u83B7\u53D6\u96C6\u5408\u5927\u5C0F\u5C31\u53EF\u4EE5\u5F97\u5230\u603B\u7684\u8BA1\u6570\u3002\u56E0\u4E3A\u5143\u7D20\u7279\u522B\u591A\uFF0C\u5355\u4E2A\u96C6\u5408\u4F1A\u7279\u522B\u5927\uFF0C\u6240\u4EE5\u5C06\u96C6\u5408\u6253\u6563\u6210 16384 \u4E2A\u5C0F\u96C6\u5408\u3002\u5F53\u5143\u7D20\u5230\u6765\u65F6\uFF0C\u901A\u8FC7 hash \u7B97\u6CD5\u5C06\u8FD9\u4E2A\u5143\u7D20\u5206\u6D3E\u5230\u5176\u4E2D\u7684\u4E00\u4E2A\u5C0F\u96C6\u5408\u5B58\u50A8\uFF0C\u540C\u6837\u7684\u5143\u7D20\u603B\u662F\u4F1A\u6563\u5217\u5230\u540C\u6837\u7684\u5C0F\u96C6\u5408\u3002\u8FD9\u6837\u603B\u7684\u8BA1\u6570\u5C31\u662F\u6240\u6709\u5C0F\u96C6\u5408\u5927\u5C0F\u7684\u603B\u548C\u3002\u4F7F\u7528\u8FD9\u79CD\u65B9\u5F0F\u7CBE\u786E\u8BA1\u6570\u9664\u4E86\u53EF\u4EE5\u589E\u52A0\u5143\u7D20\u5916\uFF0C\u8FD8\u53EF\u4EE5\u51CF\u5C11\u5143\u7D20\u3002</p><p>\u7528 Python \u4EE3\u7801\u63CF\u8FF0\u5982\u4E0B</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># coding:utf-8</span></span>
<span class="line"><span style="color:#A6ACCD;">import hashlib</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">class ExactlyCounter:</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    def __init__(self):</span></span>
<span class="line"><span style="color:#A6ACCD;">        # \u5148\u5206\u914D16384\u4E2A\u7A7A\u96C6\u5408</span></span>
<span class="line"><span style="color:#A6ACCD;">        self.buckets = []</span></span>
<span class="line"><span style="color:#A6ACCD;">        for i in range(16384):</span></span>
<span class="line"><span style="color:#A6ACCD;">            self.buckets.append(set([]))</span></span>
<span class="line"><span style="color:#A6ACCD;">        # \u4F7F\u7528md5\u54C8\u5E0C\u7B97\u6CD5</span></span>
<span class="line"><span style="color:#A6ACCD;">        self.hash = lambda x: int(hashlib.md5(x).hexdigest(), 16)</span></span>
<span class="line"><span style="color:#A6ACCD;">        self.count = 0</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    def add(self, element):</span></span>
<span class="line"><span style="color:#A6ACCD;">        h = self.hash(element)</span></span>
<span class="line"><span style="color:#A6ACCD;">        idx = h % len(self.buckets)</span></span>
<span class="line"><span style="color:#A6ACCD;">        bucket = self.buckets[idx]</span></span>
<span class="line"><span style="color:#A6ACCD;">        old_len = len(bucket)</span></span>
<span class="line"><span style="color:#A6ACCD;">        bucket.add(element)</span></span>
<span class="line"><span style="color:#A6ACCD;">        if len(bucket) &gt; old_len:</span></span>
<span class="line"><span style="color:#A6ACCD;">            # \u5982\u679C\u6570\u91CF\u53D8\u5316\u4E86\uFF0C\u603B\u6570\u5C31+1</span></span>
<span class="line"><span style="color:#A6ACCD;">            self.count += 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    def remove(self, element):</span></span>
<span class="line"><span style="color:#A6ACCD;">        h = self.hash(element)</span></span>
<span class="line"><span style="color:#A6ACCD;">        idx = h % len(self.buckets)</span></span>
<span class="line"><span style="color:#A6ACCD;">        bucket = self.buckets[idx]</span></span>
<span class="line"><span style="color:#A6ACCD;">        old_len = len(bucket)</span></span>
<span class="line"><span style="color:#A6ACCD;">        bucket.remove(element)</span></span>
<span class="line"><span style="color:#A6ACCD;">        if len(bucket) &lt; old_len:</span></span>
<span class="line"><span style="color:#A6ACCD;">            # \u5982\u679C\u6570\u91CF\u53D8\u5316\u4E86\uFF0C\u603B\u6570-1</span></span>
<span class="line"><span style="color:#A6ACCD;">            self.count -= 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">if __name__ == &#39;__main__&#39;:</span></span>
<span class="line"><span style="color:#A6ACCD;">    c = ExactlyCounter()</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i in range(100000):</span></span>
<span class="line"><span style="color:#A6ACCD;">        c.add(&quot;element_%d&quot; % i)</span></span>
<span class="line"><span style="color:#A6ACCD;">    print c.count</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i in range(100000):</span></span>
<span class="line"><span style="color:#A6ACCD;">        c.remove(&quot;element_%d&quot; % i)</span></span>
<span class="line"><span style="color:#A6ACCD;">    print c.count</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u96C6\u5408\u6253\u6563\u5E76\u6CA1\u6709\u4EC0\u4E48\u660E\u663E\u597D\u5904\uFF0C\u56E0\u4E3A\u603B\u7684\u5185\u5B58\u5360\u7528\u5E76\u6CA1\u6709\u51CF\u5C11\u3002HyperLogLog\u80AF\u5B9A\u4E0D\u662F\u8FD9\u4E2A\u7B97\u6CD5\uFF0C\u5B83\u9700\u8981\u5BF9\u8FD9\u4E2A\u5C0F\u96C6\u5408\u8FDB\u884C\u4F18\u5316\uFF0C\u538B\u7F29\u5B83\u7684\u5B58\u50A8\u7A7A\u95F4\uFF0C\u8BA9\u5B83\u7684\u5185\u5B58\u53D8\u5F97\u975E\u5E38\u5FAE\u5C0F\u3002HyperLogLog\u7B97\u6CD5\u4E2D\u6BCF\u4E2A\u6876\u6240\u5360\u7528\u7684\u7A7A\u95F4\u5B9E\u9645\u4E0A\u53EA\u6709 6 \u4E2A bit\uFF0C\u8FD9 6 \u4E2A bit \u81EA\u7136\u662F\u65E0\u6CD5\u5BB9\u7EB3\u6876\u4E2D\u6240\u6709\u5143\u7D20\u7684\uFF0C\u5B83\u8BB0\u5F55\u7684\u662F\u6876\u4E2D\u5143\u7D20\u6570\u91CF\u7684\u5BF9\u6570\u503C\u3002</p><p>\u4E3A\u4E86\u8BF4\u660E\u8FD9\u4E2A\u5BF9\u6570\u503C\u5177\u4F53\u662F\u4E2A\u4EC0\u4E48\u4E1C\u897F\uFF0C\u6211\u4EEC\u5148\u6765\u8003\u8651\u4E00\u4E2A\u5C0F\u95EE\u9898\u3002\u4E00\u4E2A\u968F\u673A\u7684\u6574\u6570\u503C\uFF0C\u8FD9\u4E2A\u6574\u6570\u7684\u5C3E\u90E8\u6709\u4E00\u4E2A 0 \u7684\u6982\u7387\u662F 50%\uFF0C\u8981\u4E48\u662F 0 \u8981\u4E48\u662F 1\u3002\u540C\u6837\uFF0C\u5C3E\u90E8\u6709\u4E24\u4E2A 0 \u7684\u6982\u7387\u662F 25%\uFF0C\u6709\u4E09\u4E2A\u96F6\u7684\u6982\u7387\u662F 12.5%\uFF0C\u4EE5\u6B64\u7C7B\u63A8\uFF0C\u6709 k \u4E2A 0 \u7684\u6982\u7387\u662F 2^(-k)\u3002\u5982\u679C\u6211\u4EEC\u968F\u673A\u51FA\u4E86\u5F88\u591A\u6574\u6570\uFF0C\u6574\u6570\u7684\u6570\u91CF\u6211\u4EEC\u5E76\u4E0D\u77E5\u9053\uFF0C\u4F46\u662F\u6211\u4EEC\u8BB0\u5F55\u4E86\u6574\u6570\u5C3E\u90E8\u8FDE\u7EED 0 \u7684\u6700\u5927\u6570\u91CF K\u3002\u6211\u4EEC\u5C31\u53EF\u4EE5\u901A\u8FC7\u8FD9\u4E2A K \u6765\u8FD1\u4F3C\u63A8\u65AD\u51FA\u6574\u6570\u7684\u6570\u91CF\uFF0C\u8FD9\u4E2A\u6570\u91CF\u5C31\u662F 2^K\u3002</p><p>\u5F53\u7136\u7ED3\u679C\u662F\u975E\u5E38\u4E0D\u51C6\u786E\u7684\uFF0C\u56E0\u4E3A\u53EF\u80FD\u63A5\u4E0B\u6765\u4F60\u968F\u673A\u4E86\u975E\u5E38\u591A\u7684\u6574\u6570\uFF0C\u4F46\u662F\u672B\u5C3E\u8FDE\u7EED\u96F6\u7684\u6700\u5927\u6570\u91CF K \u6CA1\u6709\u53D8\u5316\uFF0C\u4F46\u662F\u4F30\u8BA1\u503C\u8FD8\u662F 2^K\u3002\u4F60\u4E5F\u8BB8\u4F1A\u60F3\u5230\u8981\u662F\u8FD9\u4E2A K \u662F\u4E2A\u6D6E\u70B9\u6570\u5C31\u597D\u4E86\uFF0C\u6BCF\u6B21\u968F\u673A\u4E00\u4E2A\u65B0\u5143\u7D20\uFF0C\u5B83\u90FD\u53EF\u4EE5\u7A0D\u5FAE\u5F80\u4E0A\u6DA8\u4E00\u70B9\u70B9\uFF0C\u90A3\u4E48\u4F30\u8BA1\u503C\u5E94\u8BE5\u4F1A\u51C6\u786E\u5F88\u591A\u3002</p><p>HyperLogLog\u901A\u8FC7\u5206\u914D 16384 \u4E2A\u6876\uFF0C\u7136\u540E\u5BF9\u6240\u6709\u7684\u6876\u7684\u6700\u5927\u6570\u91CF K \u8FDB\u884C\u8C03\u5408\u5E73\u5747\u6765\u5F97\u5230\u4E00\u4E2A\u5E73\u5747\u7684\u672B\u5C3E\u96F6\u6700\u5927\u6570\u91CF K# \uFF0CK# \u662F\u4E00\u4E2A\u6D6E\u70B9\u6570\uFF0C\u4F7F\u7528\u5E73\u5747\u540E\u7684 2^K# \u6765\u4F30\u8BA1\u5143\u7D20\u7684\u603B\u91CF\u76F8\u5BF9\u800C\u8A00\u5C31\u4F1A\u51C6\u786E\u5F88\u591A\u3002\u4E0D\u8FC7\u8FD9\u53EA\u662F\u7B80\u5316\u7B97\u6CD5\uFF0C\u771F\u5B9E\u7684\u7B97\u6CD5\u8FD8\u6709\u5F88\u591A\u4FEE\u6B63\u56E0\u5B50\uFF0C\u56E0\u4E3A\u6D89\u53CA\u5230\u7684\u6570\u5B66\u7406\u8BBA\u77E5\u8BC6\u8FC7\u4E8E\u7E41\u591A\uFF0C\u8FD9\u91CC\u5C31\u4E0D\u518D\u7CBE\u786E\u63CF\u8FF0\u3002</p><p>\u4E0B\u9762\u6211\u4EEC\u770B\u770BRedis HyperLogLog \u7B97\u6CD5\u7684\u5177\u4F53\u5B9E\u73B0\u3002\u6211\u4EEC\u77E5\u9053\u4E00\u4E2AHyperLogLog\u5B9E\u9645\u5360\u7528\u7684\u7A7A\u95F4\u5927\u7EA6\u662F 13684 * 6bit / 8 = 12k \u5B57\u8282\u3002\u4F46\u662F\u5728\u8BA1\u6570\u6BD4\u8F83\u5C0F\u7684\u65F6\u5019\uFF0C\u5927\u591A\u6570\u6876\u7684\u8BA1\u6570\u503C\u90FD\u662F\u96F6\u3002\u5982\u679C 12k \u5B57\u8282\u91CC\u9762\u592A\u591A\u7684\u5B57\u8282\u90FD\u662F\u96F6\uFF0C\u90A3\u4E48\u8FD9\u4E2A\u7A7A\u95F4\u662F\u53EF\u4EE5\u9002\u5F53\u8282\u7EA6\u4E00\u4E0B\u7684\u3002Redis \u5728\u8BA1\u6570\u503C\u6BD4\u8F83\u5C0F\u7684\u60C5\u51B5\u4E0B\u91C7\u7528\u4E86\u7A00\u758F\u5B58\u50A8\uFF0C\u7A00\u758F\u5B58\u50A8\u7684\u7A7A\u95F4\u5360\u7528\u8FDC\u8FDC\u5C0F\u4E8E 12k \u5B57\u8282\u3002\u76F8\u5BF9\u4E8E\u7A00\u758F\u5B58\u50A8\u7684\u5C31\u662F\u5BC6\u96C6\u5B58\u50A8\uFF0C\u5BC6\u96C6\u5B58\u50A8\u4F1A\u6052\u5B9A\u5360\u7528 12k \u5B57\u8282\u3002</p><h2 id="\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784" tabindex="-1">\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784 <a class="header-anchor" href="#\u5BC6\u96C6\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a></h2><p>\u4E0D\u8BBA\u662F\u7A00\u758F\u5B58\u50A8\u8FD8\u662F\u5BC6\u96C6\u5B58\u50A8\uFF0CRedis \u5185\u90E8\u90FD\u662F\u4F7F\u7528\u5B57\u7B26\u4E32\u4F4D\u56FE\u6765\u5B58\u50A8 HyperLogLog \u6240\u6709\u6876\u7684\u8BA1\u6570\u503C\u3002\u5BC6\u96C6\u5B58\u50A8\u7684\u7ED3\u6784\u975E\u5E38\u7B80\u5355\uFF0C\u5C31\u662F\u8FDE\u7EED 16384 \u4E2A 6bit \u4E32\u6210\u7684\u5B57\u7B26\u4E32\u4F4D\u56FE\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e5b7a96f3b21~tplv-t2oaga2asx-image.image" alt=""></p><p>\u90A3\u4E48\u7ED9\u5B9A\u4E00\u4E2A\u6876\u7F16\u53F7\uFF0C\u5982\u4F55\u83B7\u53D6\u5B83\u7684 6bit \u8BA1\u6570\u503C\u5462\uFF1F\u8FD9 6bit \u53EF\u80FD\u5728\u4E00\u4E2A\u5B57\u8282\u5185\u90E8\uFF0C\u4E5F\u53EF\u80FD\u4F1A\u8DE8\u8D8A\u5B57\u8282\u8FB9\u754C\u3002\u6211\u4EEC\u9700\u8981\u5BF9\u8FD9\u4E00\u4E2A\u6216\u8005\u4E24\u4E2A\u5B57\u8282\u8FDB\u884C\u9002\u5F53\u7684\u79FB\u4F4D\u62FC\u63A5\u624D\u53EF\u4EE5\u5F97\u5230\u8BA1\u6570\u503C\u3002</p><p>\u5047\u8BBE\u6876\u7684\u7F16\u53F7\u4E3Aidx\uFF0C\u8FD9\u4E2A 6bit \u8BA1\u6570\u503C\u7684\u8D77\u59CB\u5B57\u8282\u4F4D\u7F6E\u504F\u79FB\u7528 offset_bytes\u8868\u793A\uFF0C\u5B83\u5728\u8FD9\u4E2A\u5B57\u8282\u7684\u8D77\u59CB\u6BD4\u7279\u4F4D\u7F6E\u504F\u79FB\u7528 offset_bits \u8868\u793A\u3002\u6211\u4EEC\u6709</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">offset_bytes = (idx * 6) / 8</span></span>
<span class="line"><span style="color:#A6ACCD;">offset_bits = (idx * 6) % 8</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u524D\u8005\u662F\u5546\uFF0C\u540E\u8005\u662F\u4F59\u6570\u3002\u6BD4\u5982 bucket 2 \u7684\u5B57\u8282\u504F\u79FB\u662F 1\uFF0C\u4E5F\u5C31\u662F\u7B2C 2 \u4E2A\u5B57\u8282\u3002\u5B83\u7684\u4F4D\u504F\u79FB\u662F4\uFF0C\u4E5F\u5C31\u662F\u7B2C 2 \u4E2A\u5B57\u8282\u7684\u7B2C 5 \u4E2A\u4F4D\u5F00\u59CB\u662F bucket 2 \u7684\u8BA1\u6570\u503C\u3002\u9700\u8981\u6CE8\u610F\u7684\u662F\u5B57\u8282\u4F4D\u5E8F\u662F\u5DE6\u8FB9\u4F4E\u4F4D\u53F3\u8FB9\u9AD8\u4F4D\uFF0C\u800C\u901A\u5E38\u6211\u4EEC\u4F7F\u7528\u7684\u5B57\u8282\u90FD\u662F\u5DE6\u8FB9\u9AD8\u4F4D\u53F3\u8FB9\u4F4E\u4F4D\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u8111\u6D77\u4E2D\u8FDB\u884C\u5012\u7F6E\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e5c734cbb598~tplv-t2oaga2asx-image.image" alt=""></p><p>\u5982\u679C offset_bits \u5C0F\u4E8E\u7B49\u4E8E 2\uFF0C\u90A3\u4E48\u8FD9 6bit \u5728\u4E00\u4E2A\u5B57\u8282\u5185\u90E8\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528\u4E0B\u9762\u7684\u8868\u8FBE\u5F0F\u5F97\u5230\u8BA1\u6570\u503C val</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e5d7661cc431~tplv-t2oaga2asx-image.image" alt=""></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">val = buffer[offset_bytes] &gt;&gt; offset_bits  # \u5411\u53F3\u79FB\u4F4D</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5982\u679C offset_bits \u5927\u4E8E 2\uFF0C\u90A3\u4E48\u5C31\u4F1A\u8DE8\u8D8A\u5B57\u8282\u8FB9\u754C\uFF0C\u8FD9\u65F6\u9700\u8981\u62FC\u63A5\u4E24\u4E2A\u5B57\u8282\u7684\u4F4D\u7247\u6BB5\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e5e23c9067d9~tplv-t2oaga2asx-image.image" alt=""></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;"># \u4F4E\u4F4D\u503C</span></span>
<span class="line"><span style="color:#A6ACCD;">low_val = buffer[offset_bytes] &gt;&gt; offset_bits</span></span>
<span class="line"><span style="color:#A6ACCD;"># \u4F4E\u4F4D\u4E2A\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">low_bits = 8 - offset_bits</span></span>
<span class="line"><span style="color:#A6ACCD;"># \u62FC\u63A5\uFF0C\u4FDD\u7559\u4F4E6\u4F4D</span></span>
<span class="line"><span style="color:#A6ACCD;">val = (high_val &lt;&lt; low_bits | low_val) &amp; 0b111111</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4E0D\u8FC7\u4E0B\u9762 Redis \u7684\u6E90\u7801\u8981\u6666\u6DA9\u4E00\u70B9\uFF0C\u770B\u5F62\u5F0F\u5B83\u4F3C\u4E4E\u53EA\u8003\u8651\u4E86\u8DE8\u8D8A\u5B57\u8282\u8FB9\u754C\u7684\u60C5\u51B5\u3002\u8FD9\u662F\u56E0\u4E3A\u5982\u679C 6bit \u5728\u5355\u4E2A\u5B57\u8282\u5185\uFF0C\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684 high_val \u7684\u503C\u662F\u96F6\uFF0C\u6240\u4EE5\u8FD9\u4E00\u4EFD\u4EE3\u7801\u53EF\u4EE5\u540C\u65F6\u7167\u987E\u5355\u5B57\u8282\u548C\u53CC\u5B57\u8282\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">// \u83B7\u53D6\u6307\u5B9A\u6876\u7684\u8BA1\u6570\u503C</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_DENSE_GET_REGISTER(target,p,regnum) do { \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t *_p = (uint8_t*) p; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _byte = regnum*HLL_BITS/8; \\ </span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _fb = regnum*HLL_BITS&amp;7; \\  # %8 = &amp;7</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _fb8 = 8 - _fb; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long b0 = _p[_byte]; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long b1 = _p[_byte+1]; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    target = ((b0 &gt;&gt; _fb) | (b1 &lt;&lt; _fb8)) &amp; HLL_REGISTER_MAX; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">} while(0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u8BBE\u7F6E\u6307\u5B9A\u6876\u7684\u8BA1\u6570\u503C</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_DENSE_SET_REGISTER(p,regnum,val) do { \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t *_p = (uint8_t*) p; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _byte = regnum*HLL_BITS/8; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _fb = regnum*HLL_BITS&amp;7; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _fb8 = 8 - _fb; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long _v = val; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    _p[_byte] &amp;= ~(HLL_REGISTER_MAX &lt;&lt; _fb); \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    _p[_byte] |= _v &lt;&lt; _fb; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    _p[_byte+1] &amp;= ~(HLL_REGISTER_MAX &gt;&gt; _fb8); \\</span></span>
<span class="line"><span style="color:#A6ACCD;">    _p[_byte+1] |= _v &gt;&gt; _fb8; \\</span></span>
<span class="line"><span style="color:#A6ACCD;">} while(0)</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u7A00\u758F\u5B58\u50A8\u7ED3\u6784" tabindex="-1">\u7A00\u758F\u5B58\u50A8\u7ED3\u6784 <a class="header-anchor" href="#\u7A00\u758F\u5B58\u50A8\u7ED3\u6784" aria-hidden="true">#</a></h2><p>\u7A00\u758F\u5B58\u50A8\u9002\u7528\u4E8E\u5F88\u591A\u8BA1\u6570\u503C\u90FD\u662F\u96F6\u7684\u60C5\u51B5\u3002\u4E0B\u56FE\u8868\u793A\u4E86\u4E00\u822C\u7A00\u758F\u5B58\u50A8\u8BA1\u6570\u503C\u7684\u72B6\u6001\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e631c1730628~tplv-t2oaga2asx-image.image" alt=""></p><p>\u5F53\u591A\u4E2A\u8FDE\u7EED\u6876\u7684\u8BA1\u6570\u503C\u90FD\u662F\u96F6\u65F6\uFF0CRedis \u4F7F\u7528\u4E86\u4E00\u4E2A\u5B57\u8282\u6765\u8868\u793A\u63A5\u4E0B\u6765\u6709\u591A\u5C11\u4E2A\u6876\u7684\u8BA1\u6570\u503C\u90FD\u662F\u96F6\uFF1A00xxxxxx\u3002\u524D\u7F00\u4E24\u4E2A\u96F6\u8868\u793A\u63A5\u4E0B\u6765\u7684 6bit \u6574\u6570\u503C\u52A0 1 \u5C31\u662F\u96F6\u503C\u8BA1\u6570\u5668\u7684\u6570\u91CF\uFF0C\u6CE8\u610F\u8FD9\u91CC\u8981\u52A0 1 \u662F\u56E0\u4E3A\u6570\u91CF\u5982\u679C\u4E3A\u96F6\u662F\u6CA1\u6709\u610F\u4E49\u7684\u3002\u6BD4\u5982 00010101\u8868\u793A\u8FDE\u7EED 22 \u4E2A\u96F6\u503C\u8BA1\u6570\u5668\u30026bit \u6700\u591A\u53EA\u80FD\u8868\u793A\u8FDE\u7EED 64 \u4E2A\u96F6\u503C\u8BA1\u6570\u5668\uFF0C\u6240\u4EE5 Redis \u53C8\u8BBE\u8BA1\u4E86\u8FDE\u7EED\u591A\u4E2A\u591A\u4E8E 64 \u4E2A\u7684\u8FDE\u7EED\u96F6\u503C\u8BA1\u6570\u5668\uFF0C\u5B83\u4F7F\u7528\u4E24\u4E2A\u5B57\u8282\u6765\u8868\u793A\uFF1A01xxxxxx yyyyyyyy\uFF0C\u540E\u9762\u7684 14bit \u53EF\u4EE5\u8868\u793A\u6700\u591A\u8FDE\u7EED 16384 \u4E2A\u96F6\u503C\u8BA1\u6570\u5668\u3002\u8FD9\u610F\u5473\u7740 HyperLogLog \u6570\u636E\u7ED3\u6784\u4E2D 16384 \u4E2A\u6876\u7684\u521D\u59CB\u72B6\u6001\uFF0C\u6240\u6709\u7684\u8BA1\u6570\u5668\u90FD\u662F\u96F6\u503C\uFF0C\u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528 2 \u4E2A\u5B57\u8282\u6765\u8868\u793A\u3002</p><p>\u5982\u679C\u8FDE\u7EED\u51E0\u4E2A\u6876\u7684\u8BA1\u6570\u503C\u975E\u96F6\uFF0C\u90A3\u5C31\u4F7F\u7528\u5F62\u5982 1vvvvvxx \u8FD9\u6837\u7684\u4E00\u4E2A\u5B57\u8282\u6765\u8868\u793A\u3002\u4E2D\u95F4 5bit \u8868\u793A\u8BA1\u6570\u503C\uFF0C\u5C3E\u90E8 2bit \u8868\u793A\u8FDE\u7EED\u51E0\u4E2A\u6876\u3002\u5B83\u7684\u610F\u601D\u662F\u8FDE\u7EED \uFF08xx +1\uFF09 \u4E2A\u8BA1\u6570\u503C\u90FD\u662F \uFF08vvvvv + 1\uFF09\u3002\u6BD4\u5982 10101011 \u8868\u793A\u8FDE\u7EED 4 \u4E2A\u8BA1\u6570\u503C\u90FD\u662F 11\u3002\u6CE8\u610F\u8FD9\u4E24\u4E2A\u503C\u90FD\u9700\u8981\u52A0 1\uFF0C\u56E0\u4E3A\u4EFB\u610F\u4E00\u4E2A\u662F\u96F6\u90FD\u610F\u5473\u7740\u8FD9\u4E2A\u8BA1\u6570\u503C\u4E3A\u96F6\uFF0C\u90A3\u5C31\u5E94\u8BE5\u4F7F\u7528\u96F6\u8BA1\u6570\u503C\u7684\u5F62\u5F0F\u6765\u8868\u793A\u3002\u6CE8\u610F\u8BA1\u6570\u503C\u6700\u5927\u53EA\u80FD\u8868\u793A\u523032\uFF0C\u800C HyperLogLog \u7684\u5BC6\u96C6\u5B58\u50A8\u5355\u4E2A\u8BA1\u6570\u503C\u7528 6bit \u8868\u793A\uFF0C\u6700\u5927\u53EF\u4EE5\u8868\u793A\u5230 63\u3002\u5F53\u7A00\u758F\u5B58\u50A8\u7684\u67D0\u4E2A\u8BA1\u6570\u503C\u9700\u8981\u8C03\u6574\u5230\u5927\u4E8E 32 \u65F6\uFF0CRedis \u5C31\u4F1A\u7ACB\u5373\u8F6C\u6362 HyperLogLog \u7684\u5B58\u50A8\u7ED3\u6784\uFF0C\u5C06\u7A00\u758F\u5B58\u50A8\u8F6C\u6362\u6210\u5BC6\u96C6\u5B58\u50A8\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e626c4e3a697~tplv-t2oaga2asx-image.image" alt=""></p><p>Redis \u4E3A\u4E86\u65B9\u4FBF\u8868\u8FBE\u7A00\u758F\u5B58\u50A8\uFF0C\u5B83\u5C06\u4E0A\u9762\u4E09\u79CD\u5B57\u8282\u8868\u793A\u5F62\u5F0F\u5206\u522B\u8D4B\u4E88\u4E86\u4E00\u6761\u6307\u4EE4\u3002</p><ol><li><pre><code>ZERO:len \u5355\u4E2A\u5B57\u8282\u8868\u793A 00\\[len-1\\]\uFF0C\u8FDE\u7EED\u6700\u591A64\u4E2A\u96F6\u8BA1\u6570\u503C
</code></pre></li><li><pre><code>VAL:value,len \u5355\u4E2A\u5B57\u8282\u8868\u793A 1\\[value-1\\]\\[len-1\\]\uFF0C\u8FDE\u7EED len \u4E2A\u503C\u4E3A value \u7684\u8BA1\u6570\u503C
</code></pre></li><li><pre><code>XZERO:len \u53CC\u5B57\u8282\u8868\u793A 01\\[len-1\\]\uFF0C\u8FDE\u7EED\u6700\u591A16384\u4E2A\u96F6\u8BA1\u6570\u503C
</code></pre></li></ol><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_XZERO_BIT 0x40 /* 01xxxxxx */</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_VAL_BIT 0x80 /* 1vvvvvxx */</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_IS_ZERO(p) (((*(p)) &amp; 0xc0) == 0) /* 00xxxxxx */</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_IS_XZERO(p) (((*(p)) &amp; 0xc0) == HLL_SPARSE_XZERO_BIT)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_IS_VAL(p) ((*(p)) &amp; HLL_SPARSE_VAL_BIT)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_ZERO_LEN(p) (((*(p)) &amp; 0x3f)+1)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_XZERO_LEN(p) (((((*(p)) &amp; 0x3f) &lt;&lt; 8) | (*((p)+1)))+1)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_VAL_VALUE(p) ((((*(p)) &gt;&gt; 2) &amp; 0x1f)+1)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_VAL_LEN(p) (((*(p)) &amp; 0x3)+1)</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_VAL_MAX_VALUE 32</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_VAL_MAX_LEN 4</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_ZERO_MAX_LEN 64</span></span>
<span class="line"><span style="color:#A6ACCD;">#define HLL_SPARSE_XZERO_MAX_LEN 16384</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4E0A\u56FE\u53EF\u4EE5\u4F7F\u7528\u6307\u4EE4\u5F62\u5F0F\u8868\u793A\u5982\u4E0B</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/31/1658e62bae79cfe5~tplv-t2oaga2asx-image.image" alt=""></p><h2 id="\u5B58\u50A8\u8F6C\u6362" tabindex="-1">\u5B58\u50A8\u8F6C\u6362 <a class="header-anchor" href="#\u5B58\u50A8\u8F6C\u6362" aria-hidden="true">#</a></h2><p>\u5F53\u8BA1\u6570\u503C\u8FBE\u5230\u4E00\u5B9A\u7A0B\u5EA6\u540E\uFF0C\u7A00\u758F\u5B58\u50A8\u5C06\u4F1A\u4E0D\u53EF\u9006\u4E00\u6B21\u6027\u8F6C\u6362\u4E3A\u5BC6\u96C6\u5B58\u50A8\u3002\u8F6C\u6362\u7684\u6761\u4EF6\u6709\u4E24\u4E2A\uFF0C\u4EFB\u610F\u4E00\u4E2A\u6EE1\u8DB3\u5C31\u4F1A\u7ACB\u5373\u53D1\u751F\u8F6C\u6362</p><ol><li>\u4EFB\u610F\u4E00\u4E2A\u8BA1\u6570\u503C\u4ECE 32 \u53D8\u6210 33\uFF0C\u56E0\u4E3AVAL\u6307\u4EE4\u5DF2\u7ECF\u65E0\u6CD5\u5BB9\u7EB3\uFF0C\u5B83\u80FD\u8868\u793A\u7684\u8BA1\u6570\u503C\u6700\u5927\u4E3A 32</li><li>\u7A00\u758F\u5B58\u50A8\u5360\u7528\u7684\u603B\u5B57\u8282\u6570\u8D85\u8FC7 3000 \u5B57\u8282\uFF0C\u8FD9\u4E2A\u9608\u503C\u53EF\u4EE5\u901A\u8FC7 hll_sparse_max_bytes \u53C2\u6570\u8FDB\u884C\u8C03\u6574\u3002</li></ol><h2 id="\u8BA1\u6570\u7F13\u5B58" tabindex="-1">\u8BA1\u6570\u7F13\u5B58 <a class="header-anchor" href="#\u8BA1\u6570\u7F13\u5B58" aria-hidden="true">#</a></h2><p>\u524D\u9762\u63D0\u5230 HyperLogLog \u8868\u793A\u7684\u603B\u8BA1\u6570\u503C\u662F\u7531 16384 \u4E2A\u6876\u7684\u8BA1\u6570\u503C\u8FDB\u884C\u8C03\u548C\u5E73\u5747\u540E\u518D\u57FA\u4E8E\u56E0\u5B50\u4FEE\u6B63\u516C\u5F0F\u8BA1\u7B97\u5F97\u51FA\u6765\u7684\u3002\u5B83\u9700\u8981\u904D\u5386\u6240\u6709\u7684\u6876\u8FDB\u884C\u8BA1\u7B97\u624D\u53EF\u4EE5\u5F97\u5230\u8FD9\u4E2A\u503C\uFF0C\u4E2D\u95F4\u8FD8\u6D89\u53CA\u5230\u5F88\u591A\u6D6E\u70B9\u8FD0\u7B97\u3002\u8FD9\u4E2A\u8BA1\u7B97\u91CF\u76F8\u5BF9\u6765\u8BF4\u8FD8\u662F\u6BD4\u8F83\u5927\u7684\u3002</p><p>\u6240\u4EE5 Redis \u4F7F\u7528\u4E86\u4E00\u4E2A\u989D\u5916\u7684\u5B57\u6BB5\u6765\u7F13\u5B58\u603B\u8BA1\u6570\u503C\uFF0C\u8FD9\u4E2A\u5B57\u6BB5\u6709 64bit\uFF0C\u6700\u9AD8\u4F4D\u5982\u679C\u4E3A 1 \u8868\u793A\u8BE5\u503C\u662F\u5426\u5DF2\u7ECF\u8FC7\u671F\uFF0C\u5982\u679C\u4E3A 0\uFF0C \u90A3\u4E48\u5269\u4E0B\u7684 63bit \u5C31\u662F\u8BA1\u6570\u503C\u3002</p><p>\u5F53 HyperLogLog \u4E2D\u4EFB\u610F\u4E00\u4E2A\u6876\u7684\u8BA1\u6570\u503C\u53D1\u751F\u53D8\u5316\u65F6\uFF0C\u5C31\u4F1A\u5C06\u8BA1\u6570\u7F13\u5B58\u8BBE\u4E3A\u8FC7\u671F\uFF0C\u4F46\u662F\u4E0D\u4F1A\u7ACB\u5373\u89E6\u53D1\u8BA1\u7B97\u3002\u800C\u662F\u8981\u7B49\u5230\u7528\u6237\u663E\u793A\u8C03\u7528 pfcount \u6307\u4EE4\u65F6\u624D\u4F1A\u89E6\u53D1\u91CD\u65B0\u8BA1\u7B97\u5237\u65B0\u7F13\u5B58\u3002\u7F13\u5B58\u5237\u65B0\u5728\u5BC6\u96C6\u5B58\u50A8\u65F6\u9700\u8981\u904D\u5386 16384 \u4E2A\u6876\u7684\u8BA1\u6570\u503C\u8FDB\u884C\u8C03\u548C\u5E73\u5747\uFF0C\u4F46\u662F\u7A00\u758F\u5B58\u50A8\u65F6\u6CA1\u6709\u8FD9\u4E48\u5927\u7684\u8BA1\u7B97\u91CF\u3002\u4E5F\u5C31\u662F\u8BF4\u53EA\u6709\u5F53\u8BA1\u6570\u503C\u6BD4\u8F83\u5927\u65F6\u624D\u53EF\u80FD\u4EA7\u751F\u8F83\u5927\u7684\u8BA1\u7B97\u91CF\u3002\u53E6\u4E00\u65B9\u9762\u5982\u679C\u8BA1\u6570\u503C\u6BD4\u8F83\u5927\uFF0C\u90A3\u4E48\u5927\u90E8\u5206 pfadd \u64CD\u4F5C\u6839\u672C\u4E0D\u4F1A\u5BFC\u81F4\u6876\u4E2D\u7684\u8BA1\u6570\u503C\u53D1\u751F\u53D8\u5316\u3002</p><p>\u8FD9\u610F\u5473\u7740\u5728\u4E00\u4E2A\u6781\u5177\u53D8\u5316\u7684 HLL \u8BA1\u6570\u5668\u4E2D\u9891\u7E41\u8C03\u7528 pfcount \u6307\u4EE4\u53EF\u80FD\u4F1A\u6709\u5C11\u8BB8\u6027\u80FD\u95EE\u9898\u3002\u5173\u4E8E\u8FD9\u4E2A\u6027\u80FD\u65B9\u9762\u7684\u62C5\u5FE7\u5728 Redis \u4F5C\u8005 antirez \u7684\u535A\u5BA2\u4E2D\u4E5F\u63D0\u5230\u4E86\u3002\u4E0D\u8FC7\u4F5C\u8005\u505A\u4E86\u4ED4\u7EC6\u7684\u538B\u529B\u7684\u6D4B\u8BD5\uFF0C\u53D1\u73B0\u8FD9\u662F\u65E0\u9700\u62C5\u5FC3\u7684\uFF0Cpfcount \u6307\u4EE4\u7684\u5E73\u5747\u65F6\u95F4\u590D\u6742\u5EA6\u5C31\u662F O(1)\u3002</p><blockquote><p>After this change even trying to add elements at maximum speed using a pipeline of 32 elements with 50 simultaneous clients, PFCOUNT was able to perform as well as any other O(1) command with very small constant times.</p></blockquote><h2 id="\u5BF9\u8C61\u5934" tabindex="-1">\u5BF9\u8C61\u5934 <a class="header-anchor" href="#\u5BF9\u8C61\u5934" aria-hidden="true">#</a></h2><p>HyperLogLog \u9664\u4E86\u9700\u8981\u5B58\u50A8 16384 \u4E2A\u6876\u7684\u8BA1\u6570\u503C\u4E4B\u5916\uFF0C\u5B83\u8FD8\u6709\u4E00\u4E9B\u9644\u52A0\u7684\u5B57\u6BB5\u9700\u8981\u5B58\u50A8\uFF0C\u6BD4\u5982\u603B\u8BA1\u6570\u7F13\u5B58\u3001\u5B58\u50A8\u7C7B\u578B\u3002\u6240\u4EE5\u5B83\u4F7F\u7528\u4E86\u4E00\u4E2A\u989D\u5916\u7684\u5BF9\u8C61\u5934\u6765\u8868\u793A\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">struct hllhdr {</span></span>
<span class="line"><span style="color:#A6ACCD;">    char magic[4];      /* \u9B54\u672F\u5B57\u7B26\u4E32&quot;HYLL&quot; */</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t encoding;   /* \u5B58\u50A8\u7C7B\u578B HLL_DENSE or HLL_SPARSE. */</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t notused[3]; /* \u4FDD\u7559\u4E09\u4E2A\u5B57\u8282\u672A\u6765\u53EF\u80FD\u4F1A\u4F7F\u7528 */</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t card[8];    /* \u603B\u8BA1\u6570\u7F13\u5B58 */</span></span>
<span class="line"><span style="color:#A6ACCD;">    uint8_t registers[]; /* \u6240\u6709\u6876\u7684\u8BA1\u6570\u5668 */</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6240\u4EE5 HyperLogLog \u6574\u4F53\u7684\u5185\u90E8\u7ED3\u6784\u5C31\u662F HLL \u5BF9\u8C61\u5934 \u52A0\u4E0A 16384 \u4E2A\u6876\u7684\u8BA1\u6570\u503C\u4F4D\u56FE\u3002\u5B83\u5728 Redis \u7684\u5185\u90E8\u7ED3\u6784\u8868\u73B0\u5C31\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u4F4D\u56FE\u3002\u4F60\u53EF\u4EE5\u628A HyperLogLog \u5BF9\u8C61\u5F53\u6210\u666E\u901A\u7684\u5B57\u7B26\u4E32\u6765\u8FDB\u884C\u5904\u7406\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; pfadd codehole python java golang</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; get codehole</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;HYLL\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x80C\\x03\\x84MK\\x80P\\xb8\\x80^\\xf3&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4F46\u662F\u4E0D\u53EF\u4EE5\u4F7F\u7528 HyperLogLog \u6307\u4EE4\u6765\u64CD\u7EB5\u666E\u901A\u7684\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A\u5B83\u9700\u8981\u68C0\u67E5\u5BF9\u8C61\u5934\u9B54\u672F\u5B57\u7B26\u4E32\u662F\u5426\u662F &quot;HYLL&quot;\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; set codehole python</span></span>
<span class="line"><span style="color:#A6ACCD;">OK</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; pfadd codehole java golang</span></span>
<span class="line"><span style="color:#A6ACCD;">(error) WRONGTYPE Key is not a valid HyperLogLog string value.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4F46\u662F\u5982\u679C\u5B57\u7B26\u4E32\u4EE5 &quot;HYLL\\x00&quot; \u6216\u8005 &quot;HYLL\\x01&quot; \u5F00\u5934\uFF0C\u90A3\u4E48\u5C31\u53EF\u4EE5\u4F7F\u7528 HyperLogLog \u7684\u6307\u4EE4\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; set codehole &quot;HYLL\\x01whatmagicthing&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">OK</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; get codehole</span></span>
<span class="line"><span style="color:#A6ACCD;">&quot;HYLL\\x01whatmagicthing&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">127.0.0.1:6379&gt; pfadd codehole python java golang</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 1</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u4E5F\u8BB8\u4F60\u4F1A\u611F\u89C9\u975E\u5E38\u5947\u602A\uFF0C\u8FD9\u662F\u56E0\u4E3A HyperLogLog \u5728\u6267\u884C\u6307\u4EE4\u524D\u9700\u8981\u5BF9\u5185\u5BB9\u8FDB\u884C\u683C\u5F0F\u68C0\u67E5\uFF0C\u8FD9\u4E2A\u68C0\u67E5\u5C31\u662F\u67E5\u770B\u5BF9\u8C61\u5934\u7684 magic \u9B54\u672F\u5B57\u7B26\u4E32\u662F\u5426\u662F &quot;HYLL&quot; \u4EE5\u53CA encoding \u5B57\u6BB5\u662F\u5426\u662F HLL_SPARSE=0 \u6216\u8005 HLL_DENSE=1 \u6765\u5224\u65AD\u5F53\u524D\u7684\u5B57\u7B26\u4E32\u662F\u5426\u662F HyperLogLog \u8BA1\u6570\u5668\u3002\u5982\u679C\u662F\u5BC6\u96C6\u5B58\u50A8\uFF0C\u8FD8\u9700\u8981\u5224\u65AD\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u662F\u5426\u6070\u597D\u7B49\u4E8E\u5BC6\u96C6\u8BA1\u6570\u5668\u5B58\u50A8\u7684\u957F\u5EA6\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">int isHLLObjectOrReply(client *c, robj *o) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    /* Magic should be &quot;HYLL&quot;. */</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (hdr-&gt;magic[0] != &#39;H&#39; || hdr-&gt;magic[1] != &#39;Y&#39; ||</span></span>
<span class="line"><span style="color:#A6ACCD;">        hdr-&gt;magic[2] != &#39;L&#39; || hdr-&gt;magic[3] != &#39;L&#39;) goto invalid;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    if (hdr-&gt;encoding &gt; HLL_MAX_ENCODING) goto invalid;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    if (hdr-&gt;encoding == HLL_DENSE &amp;&amp;</span></span>
<span class="line"><span style="color:#A6ACCD;">        stringObjectLen(o) != HLL_DENSE_SIZE) goto invalid;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    return C_OK;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">invalid:</span></span>
<span class="line"><span style="color:#A6ACCD;">    addReplySds(c,</span></span>
<span class="line"><span style="color:#A6ACCD;">        sdsnew(&quot;-WRONGTYPE Key is not a valid &quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">               &quot;HyperLogLog string value.\\r\\n&quot;));</span></span>
<span class="line"><span style="color:#A6ACCD;">    return C_ERR;</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>HyperLogLog \u548C \u5B57\u7B26\u4E32\u7684\u5173\u7CFB\u5C31\u597D\u6BD4 Geo \u548C zset \u7684\u5173\u7CFB\u3002\u4F60\u4E5F\u53EF\u4EE5\u4F7F\u7528\u4EFB\u610F zset \u7684\u6307\u4EE4\u6765\u8BBF\u95EE Geo \u6570\u636E\u7ED3\u6784\uFF0C\u56E0\u4E3A Geo \u5185\u90E8\u5B58\u50A8\u5C31\u662F\u4F7F\u7528\u4E86\u4E00\u4E2A\u7EAF\u7CB9\u7684 zset\u6765\u8BB0\u5F55\u5143\u7D20\u7684\u5730\u7406\u4F4D\u7F6E\u3002</p>`,61),o=[e];function t(c,i,r,A,C,g){return a(),n("div",null,o)}const _=s(l,[["render",t]]);export{d as __pageData,_ as default};
