import{_ as s,c as n,o as a,d as l}from"./app.c4f45da1.js";const D=JSON.parse('{"title":"\u6E90\u7801 9-\u5982\u5C65\u8584\u51B0 \u2014\u2014 \u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B","slug":"\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B","link":"#\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B","children":[]},{"level":2,"title":"\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742","slug":"\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742","link":"#\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742","children":[]},{"level":2,"title":"\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0","slug":"\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0","link":"#\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0","children":[]},{"level":2,"title":"\u961F\u5217\u5B89\u5168","slug":"\u961F\u5217\u5B89\u5168","link":"#\u961F\u5217\u5B89\u5168","children":[]},{"level":2,"title":"\u601D\u8003","slug":"\u601D\u8003","link":"#\u601D\u8003","children":[]}],"relativePath":"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 9-\u5982\u5C65\u8584\u51B0 \u2014\u2014 \u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272.md"}'),p={name:"\u5176\u4ED6/Redis \u6DF1\u5EA6\u5386\u9669\uFF1A\u6838\u5FC3\u539F\u7406\u4E0E\u5E94\u7528\u5B9E\u8DF5/\u6E90\u7801 9-\u5982\u5C65\u8584\u51B0 \u2014\u2014 \u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272.md"},e=l(`<h1 id="\u6E90\u7801-9-\u5982\u5C65\u8584\u51B0-\u2014\u2014-\u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272" tabindex="-1">\u6E90\u7801 9-\u5982\u5C65\u8584\u51B0 \u2014\u2014 \u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272 <a class="header-anchor" href="#\u6E90\u7801-9-\u5982\u5C65\u8584\u51B0-\u2014\u2014-\u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272" aria-hidden="true">#</a></h1><hr><h1 id="\u6E90\u7801-9-\u5982\u5C65\u8584\u51B0-\u2014\u2014-\u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272-1" tabindex="-1">\u6E90\u7801 9: \u5982\u5C65\u8584\u51B0 \u2014\u2014 \u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272 <a class="header-anchor" href="#\u6E90\u7801-9-\u5982\u5C65\u8584\u51B0-\u2014\u2014-\u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u727A\u7272-1" aria-hidden="true">#</a></h1><p>\u524D\u9762\u6211\u4EEC\u8BB2\u4E86 Redis \u61D2\u60F0\u5220\u9664\u7684\u7279\u6027\uFF0C\u5B83\u662F\u4F7F\u7528\u5F02\u6B65\u7EBF\u7A0B\u5BF9\u5DF2\u5220\u9664\u7684\u8282\u70B9\u8FDB\u884C\u5185\u5B58\u56DE\u6536\u3002\u4F46\u662F\u8FD8\u4E0D\u591F\u6DF1\u5165\uFF0C\u6240\u4EE5\u672C\u8282\u6211\u4EEC\u8981\u5BF9\u5F02\u6B65\u7EBF\u7A0B\u903B\u8F91\u5904\u7406\u7684\u7EC6\u8282\u8FDB\u884C\u5206\u6790\uFF0C\u770B\u770B Antirez \u662F\u5982\u4F55\u5B9E\u73B0\u5F02\u6B65\u7EBF\u7A0B\u5904\u7406\u7684\u3002</p><p>\u5F02\u6B65\u7EBF\u7A0B\u5728 Redis \u5185\u90E8\u6709\u4E00\u4E2A\u7279\u522B\u7684\u540D\u79F0\uFF0C\u5B83\u5C31\u662F<code>BIO</code>\uFF0C\u5168\u79F0\u662F<code>Background IO</code>\uFF0C\u610F\u601D\u662F\u5728\u80CC\u540E\u9ED8\u9ED8\u5E72\u6D3B\u7684 IO \u7EBF\u7A0B\u3002\u4E0D\u8FC7\u5185\u5B58\u56DE\u6536\u672C\u8EAB\u5E76\u4E0D\u662F\u4EC0\u4E48 IO \u64CD\u4F5C\uFF0C\u53EA\u662F CPU \u7684\u8BA1\u7B97\u6D88\u8017\u53EF\u80FD\u4F1A\u6BD4\u8F83\u5927\u800C\u5DF2\u3002</p><h2 id="\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B" tabindex="-1">\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B <a class="header-anchor" href="#\u61D2\u60F0\u5220\u9664\u7684\u6700\u521D\u5B9E\u73B0\u4E0D\u662F\u5F02\u6B65\u7EBF\u7A0B" aria-hidden="true">#</a></h2><p>Antirez \u5B9E\u73B0\u61D2\u60F0\u5220\u9664\u65F6\uFF0C\u5B83\u5E76\u4E0D\u662F\u4E00\u5F00\u59CB\u5C31\u60F3\u5230\u4E86\u5F02\u6B65\u7EBF\u7A0B\u3002\u6700\u521D\u7684\u5C1D\u8BD5\u662F\u5728\u4E3B\u7EBF\u7A0B\u91CC\uFF0C\u4F7F\u7528\u7C7B\u4F3C\u4E8E\u5B57\u5178\u6E10\u8FDB\u5F0F\u642C\u8FC1\u90A3\u6837\u6765\u5B9E\u73B0\u6E10\u8FDB\u5F0F\u5220\u9664\u56DE\u6536\u3002\u6BD4\u5982\u5BF9\u4E8E\u4E00\u4E2A\u975E\u5E38\u5927\u7684\u5B57\u5178\u6765\u8BF4\uFF0C\u61D2\u60F0\u5220\u9664\u662F\u91C7\u7528\u7C7B\u4F3C\u4E8E scan \u64CD\u4F5C\u7684\u65B9\u6CD5\uFF0C\u901A\u8FC7\u904D\u5386\u7B2C\u4E00\u7EF4\u6570\u7EC4\u6765\u9010\u6B65\u5220\u9664\u56DE\u6536\u7B2C\u4E8C\u7EF4\u94FE\u8868\u7684\u5185\u5BB9\uFF0C\u7B49\u5230\u6240\u6709\u94FE\u8868\u90FD\u56DE\u6536\u5B8C\u4E86\uFF0C\u518D\u4E00\u6B21\u6027\u56DE\u6536\u7B2C\u4E00\u7EF4\u6570\u7EC4\u3002\u8FD9\u6837\u4E5F\u53EF\u4EE5\u8FBE\u5230\u5220\u9664\u5927\u5BF9\u8C61\u65F6\u4E0D\u963B\u585E\u4E3B\u7EBF\u7A0B\u7684\u6548\u679C\u3002</p><p>\u4F46\u662F\u8BF4\u8D77\u6765\u5BB9\u6613\u505A\u8D77\u6765\u5374\u5F88\u96BE\u3002\u6E10\u8FDB\u5F0F\u56DE\u6536\u9700\u8981\u4ED4\u7EC6\u63A7\u5236\u56DE\u6536\u9891\u7387\uFF0C\u5B83\u4E0D\u80FD\u56DE\u6536\u7684\u592A\u731B\uFF0C\u8FD9\u4F1A\u5BFC\u81F4 CPU \u8D44\u6E90\u5360\u7528\u8FC7\u591A\uFF0C\u4E5F\u4E0D\u80FD\u56DE\u6536\u7684\u8717\u725B\u6162\uFF0C\u56E0\u4E3A\u5185\u5B58\u56DE\u6536\u4E0D\u53CA\u65F6\u53EF\u80FD\u5BFC\u81F4\u5185\u5B58\u6301\u7EED\u589E\u957F\u3002</p><p>Antirez \u9700\u8981\u91C7\u7528\u5408\u9002\u7684\u81EA\u9002\u5E94\u7B97\u6CD5\u6765\u63A7\u5236\u56DE\u6536\u9891\u7387\u3002\u4ED6\u9996\u5148\u60F3\u5230\u7684\u662F\u68C0\u6D4B\u5185\u5B58\u589E\u957F\u7684\u8D8B\u52BF\u662F\u589E\u957F (+1) \u8FD8\u662F\u4E0B\u964D (-1) \u6765\u6E10\u8FDB\u5F0F\u8C03\u6574\u56DE\u6536\u9891\u7387\u7CFB\u6570\uFF0C\u8FD9\u6837\u7684\u81EA\u9002\u5E94\u7B97\u6CD5\u5B9E\u73B0\u4E5F\u5F88\u7B80\u5355\u3002\u4F46\u662F\u6D4B\u8BD5\u540E\u53D1\u73B0\u5728\u670D\u52A1\u7E41\u5FD9\u7684\u65F6\u5019\uFF0CQPS \u4F1A\u4E0B\u964D\u5230\u6B63\u5E38\u60C5\u51B5\u4E0B 65% \u7684\u6C34\u5E73\uFF0C\u8FD9\u70B9\u975E\u5E38\u81F4\u547D\u3002</p><p>\u6240\u4EE5 Antirez \u624D\u4F7F\u7528\u4E86\u5982\u4ECA\u4F7F\u7528\u7684\u65B9\u6848\u2014\u2014\u5F02\u6B65\u7EBF\u7A0B\u3002\u5F02\u6B65\u7EBF\u7A0B\u8FD9\u5957\u65B9\u6848\u5C31\u7B80\u5355\u591A\u4E86\uFF0C\u91CA\u653E\u5185\u5B58\u4E0D\u7528\u4E3A\u6BCF\u79CD\u6570\u636E\u7ED3\u6784\u9002\u914D\u4E00\u5957\u6E10\u8FDB\u5F0F\u91CA\u653E\u7B56\u7565\uFF0C\u4E5F\u4E0D\u7528\u641E\u4E2A\u81EA\u9002\u5E94\u7B97\u6CD5\u6765\u4ED4\u7EC6\u63A7\u5236\u56DE\u6536\u9891\u7387\u3002\u5C06\u5BF9\u8C61\u4ECE\u5168\u5C40\u5B57\u5178\u4E2D\u6458\u6389\uFF0C\u7136\u540E\u5F80\u961F\u5217\u91CC\u4E00\u6254\uFF0C\u4E3B\u7EBF\u7A0B\u5C31\u5E72\u522B\u7684\u53BB\u4E86\u3002\u5F02\u6B65\u7EBF\u7A0B\u4ECE\u961F\u5217\u91CC\u53D6\u51FA\u5BF9\u8C61\u6765\uFF0C\u76F4\u63A5\u8D70\u6B63\u5E38\u7684\u540C\u6B65\u91CA\u653E\u903B\u8F91\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u4E0D\u8FC7\u4F7F\u7528\u5F02\u6B65\u7EBF\u7A0B\u4E5F\u662F\u6709\u4EE3\u4EF7\u7684\uFF0C\u4E3B\u7EBF\u7A0B\u548C\u5F02\u6B65\u7EBF\u7A0B\u4E4B\u95F4\u5728\u5185\u5B58\u56DE\u6536\u5668 (jemalloc) \u7684\u4F7F\u7528\u4E0A\u5B58\u5728\u7ADE\u4E89\u3002\u8FD9\u70B9\u7ADE\u4E89\u6D88\u8017\u662F\u53EF\u4EE5\u5FFD\u7565\u4E0D\u8BA1\u7684\uFF0C\u56E0\u4E3A Redis \u7684\u4E3B\u7EBF\u7A0B\u5728\u5185\u5B58\u7684\u5206\u914D\u4E0E\u56DE\u6536\u4E0A\u82B1\u7684\u65F6\u95F4\u76F8\u5BF9\u6574\u4F53\u8FD0\u7B97\u65F6\u95F4\u800C\u8A00\u662F\u6781\u5C11\u7684\u3002</p><h2 id="\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742" tabindex="-1">\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742 <a class="header-anchor" href="#\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5176\u5B9E\u4E5F\u76F8\u5F53\u590D\u6742" aria-hidden="true">#</a></h2><p>\u521A\u624D\u4E0A\u9762\u8BF4\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u5F88\u7B80\u5355\uFF0C\u4E3A\u4EC0\u4E48\u8FD9\u91CC\u53C8\u8BF4\u5B83\u5F88\u590D\u6742\u5462\uFF1F\u56E0\u4E3A\u6709\u4E00\u70B9\u6211\u4EEC\u4E4B\u524D\u6CA1\u6709\u60F3\u5230\u3002\u8FD9\u70B9\u975E\u5E38\u53EF\u6015\uFF0C\u4E25\u91CD\u963B\u788D\u4E86\u5F02\u6B65\u7EBF\u7A0B\u65B9\u6848\u7684\u6539\u9020\uFF0C\u90A3\u5C31\u662F Redis \u7684\u5185\u90E8\u5BF9\u8C61\u6709\u5171\u4EAB\u673A\u5236\u3002</p><p>\u6BD4\u5982\u96C6\u5408\u7684\u5E76\u96C6\u64CD\u4F5C <code>sunionstore</code> \u7528\u6765\u5C06\u591A\u4E2A\u96C6\u5408\u5408\u5E76\u6210\u4E00\u4E2A\u65B0\u96C6\u5408</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">&gt; sadd src1 value1 value2 value3</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 3</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; sadd src2 value3 value4 value5</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 3</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; sunionstore dest src1 src2</span></span>
<span class="line"><span style="color:#A6ACCD;">(integer) 5</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt; smembers dest</span></span>
<span class="line"><span style="color:#A6ACCD;">1) &quot;value2&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">2) &quot;value3&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">3) &quot;value1&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">4) &quot;value4&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">5) &quot;value5&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6211\u4EEC\u770B\u5230\u65B0\u7684\u96C6\u5408\u5305\u542B\u4E86\u65E7\u96C6\u5408\u7684\u6240\u6709\u5143\u7D20\u3002\u4F46\u662F\u8FD9\u91CC\u6709\u4E00\u4E2A\u6211\u4EEC\u6CA1\u770B\u5230\u7684 trick\u3002\u90A3\u5C31\u662F\u5E95\u5C42\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\u88AB\u5171\u4EAB\u4E86\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/7/165133443f6216c8~tplv-t2oaga2asx-image.image" alt=""></p><p>\u4E3A\u4EC0\u4E48\u5BF9\u8C61\u5171\u4EAB\u662F\u61D2\u60F0\u5220\u9664\u7684\u5DE8\u5927\u969C\u788D\u5462\uFF1F\u56E0\u4E3A\u61D2\u60F0\u5220\u9664\u76F8\u5F53\u4E8E\u5F7B\u5E95\u780D\u6389\u67D0\u4E2A\u6811\u679D\uFF0C\u5C06\u5B83\u6254\u5230\u5F02\u6B65\u5220\u9664\u961F\u5217\u91CC\u53BB\u3002\u6CE8\u610F\u8FD9\u91CC\u5FC5\u987B\u662F\u5F7B\u5E95\u5220\u9664\uFF0C\u800C\u4E0D\u80FD\u85D5\u65AD\u4E1D\u8FDE\u3002\u5982\u679C\u5E95\u5C42\u5BF9\u8C61\u662F\u5171\u4EAB\u7684\uFF0C\u90A3\u5C31\u505A\u4E0D\u5230\u5F7B\u5E95\u5220\u9664\u3002</p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/8/7/165133bdc0df4a14~tplv-t2oaga2asx-image.image" alt=""></p><p>\u6240\u4EE5 Antirez \u4E3A\u4E86\u652F\u6301\u61D2\u60F0\u5220\u9664\uFF0C\u5C06\u5BF9\u8C61\u5171\u4EAB\u673A\u5236\u5F7B\u5E95\u629B\u5F03\uFF0C\u5B83\u5C06\u8FD9\u79CD\u5BF9\u8C61\u7ED3\u6784\u79F0\u4E3A\u300Cshare-nothing\u300D\uFF0C\u4E5F\u5C31\u662F\u65E0\u5171\u4EAB\u8BBE\u8BA1\u3002\u4F46\u662F\u7529\u6389\u5BF9\u8C61\u5171\u4EAB\u8C08\u4F55\u5BB9\u6613\uFF01\u8FD9\u79CD\u5BF9\u8C61\u5171\u4EAB\u673A\u5236\u6563\u843D\u5728\u6E90\u4EE3\u7801\u7684\u5404\u4E2A\u89D2\u843D\uFF0C\u7275\u4E00\u53D1\u800C\u52A8\u5168\u8EAB\uFF0C\u6539\u8D77\u6765\u72B9\u5982\u5728\u5E03\u6EE1\u5730\u96F7\u7684\u9053\u8DEF\u4E0A\u5C0F\u5FC3\u7FFC\u7FFC\u5730\u884C\u8D70\u3002</p><p>\u4E0D\u8FC7 Antirez \u8FD8\u662F\u51B3\u5FC3\u6539\u4E86\uFF0C\u4ED6\u5C06\u8FD9\u79CD\u6539\u52A8\u63CF\u8FF0\u4E3A\u300C\u7EDD\u671B\u800C\u75AF\u72C2\u300D\uFF0C\u53EF\u89C1\u6539\u52A8\u4E4B\u5927\u4E4B\u6DF1\u4E4B\u9669\uFF0C\u524D\u540E\u82B1\u4E86\u597D\u51E0\u5468\u7684\u65F6\u95F4\u624D\u6539\u5B8C\u3002\u4E0D\u8FC7\u6548\u679C\u4E5F\u662F\u5F88\u660E\u663E\u7684\uFF0C\u5BF9\u8C61\u7684\u5220\u9664\u64CD\u4F5C\u518D\u4E5F\u4E0D\u4F1A\u5BFC\u81F4\u4E3B\u7EBF\u7A0B\u5361\u987F\u4E86\u3002</p><h2 id="\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0" tabindex="-1">\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0 <a class="header-anchor" href="#\u5F02\u6B65\u5220\u9664\u7684\u5B9E\u73B0" aria-hidden="true">#</a></h2><p>\u4E3B\u7EBF\u7A0B\u9700\u8981\u5C06\u5220\u9664\u4EFB\u52A1\u4F20\u9012\u7ED9\u5F02\u6B65\u7EBF\u7A0B\uFF0C\u5B83\u662F\u901A\u8FC7\u4E00\u4E2A\u666E\u901A\u7684\u53CC\u5411\u94FE\u8868\u6765\u4F20\u9012\u7684\u3002\u56E0\u4E3A\u94FE\u8868\u9700\u8981\u652F\u6301\u591A\u7EBF\u7A0B\u5E76\u53D1\u64CD\u4F5C\uFF0C\u6240\u4EE5\u5B83\u9700\u8981\u6709\u9501\u6765\u4FDD\u62A4\u3002</p><p>\u6267\u884C\u61D2\u60F0\u5220\u9664\u65F6\uFF0CRedis \u5C06\u5220\u9664\u64CD\u4F5C\u7684\u76F8\u5173\u53C2\u6570\u5C01\u88C5\u6210\u4E00\u4E2A<code>bio_job</code>\u7ED3\u6784\uFF0C\u7136\u540E\u8FFD\u52A0\u5230\u94FE\u8868\u5C3E\u90E8\u3002\u5F02\u6B65\u7EBF\u7A0B\u901A\u8FC7\u904D\u5386\u94FE\u8868\u6458\u53D6 job \u5143\u7D20\u6765\u6328\u4E2A\u6267\u884C\u5F02\u6B65\u4EFB\u52A1\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">struct bio_job {</span></span>
<span class="line"><span style="color:#A6ACCD;">    time_t time;  // \u65F6\u95F4\u5B57\u6BB5\u6682\u65F6\u6CA1\u6709\u4F7F\u7528\uFF0C\u5E94\u8BE5\u662F\u9884\u7559\u7684</span></span>
<span class="line"><span style="color:#A6ACCD;">    void *arg1, *arg2, *arg3;</span></span>
<span class="line"><span style="color:#A6ACCD;">};</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u6211\u4EEC\u6CE8\u610F\u5230\u8FD9\u4E2A job \u7ED3\u6784\u6709\u4E09\u4E2A\u53C2\u6570\uFF0C\u4E3A\u4EC0\u4E48\u5220\u9664\u5BF9\u8C61\u9700\u8981\u4E09\u4E2A\u53C2\u6570\u5462\uFF1F\u6211\u4EEC\u7EE7\u7EED\u770B\u4EE3\u7801\uFF1A</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">    /* What we free changes depending on what arguments are set:</span></span>
<span class="line"><span style="color:#A6ACCD;">     * arg1 -&gt; free the object at pointer.</span></span>
<span class="line"><span style="color:#A6ACCD;">     * arg2 &amp; arg3 -&gt; free two dictionaries (a Redis DB).</span></span>
<span class="line"><span style="color:#A6ACCD;">     * only arg3 -&gt; free the skiplist. */</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (job-&gt;arg1)</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u91CA\u653E\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0Cstring/set/zset/hash \u7B49\u7B49\uFF0C\u7528\u4E8E\u666E\u901A\u5BF9\u8C61\u7684\u5F02\u6B65\u5220\u9664</span></span>
<span class="line"><span style="color:#A6ACCD;">        lazyfreeFreeObjectFromBioThread(job-&gt;arg1);</span></span>
<span class="line"><span style="color:#A6ACCD;">    else if (job-&gt;arg2 &amp;&amp; job-&gt;arg3)</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u91CA\u653E\u5168\u5C40 redisDb \u5BF9\u8C61\u7684 dict \u5B57\u5178\u548C expires \u5B57\u5178\uFF0C\u7528\u4E8E flushdb</span></span>
<span class="line"><span style="color:#A6ACCD;">        lazyfreeFreeDatabaseFromBioThread(job-&gt;arg2,job-&gt;arg3);</span></span>
<span class="line"><span style="color:#A6ACCD;">    else if (job-&gt;arg3)</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u91CA\u653E Cluster \u7684 slots_to_keys \u5BF9\u8C61\uFF0C\u53C2\u89C1\u6E90\u7801\u7BC7\u7684\u300C\u57FA\u6570\u6811\u300D\u5C0F\u8282</span></span>
<span class="line"><span style="color:#A6ACCD;">        lazyfreeFreeSlotsMapFromBioThread(job-&gt;arg3);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u53EF\u4EE5\u770B\u5230\u901A\u8FC7\u7EC4\u5408\u8FD9\u4E09\u4E2A\u53C2\u6570\u53EF\u4EE5\u5B9E\u73B0\u4E0D\u540C\u7ED3\u6784\u7684\u91CA\u653E\u903B\u8F91\u3002\u63A5\u4E0B\u6765\u6211\u4EEC\u7EE7\u7EED\u8FFD\u8E2A\u666E\u901A\u5BF9\u8C61\u7684\u5F02\u6B65\u5220\u9664<code>lazyfreeFreeObjectFromBioThread</code>\u662F\u5982\u4F55\u8FDB\u884C\u7684\uFF0C\u8BF7\u4ED4\u7EC6\u9605\u8BFB\u4EE3\u7801\u6CE8\u91CA\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">void lazyfreeFreeObjectFromBioThread(robj *o) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    decrRefCount(o); // \u964D\u4F4E\u5BF9\u8C61\u7684\u5F15\u7528\u8BA1\u6570\uFF0C\u5982\u679C\u4E3A\u96F6\uFF0C\u5C31\u91CA\u653E</span></span>
<span class="line"><span style="color:#A6ACCD;">    atomicDecr(lazyfree_objects,1); // lazyfree_objects \u4E3A\u5F85\u91CA\u653E\u5BF9\u8C61\u7684\u6570\u91CF\uFF0C\u7528\u4E8E\u7EDF\u8BA1</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u51CF\u5C11\u5F15\u7528\u8BA1\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">void decrRefCount(robj *o) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    if (o-&gt;refcount == 1) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u8BE5\u91CA\u653E\u5BF9\u8C61\u4E86</span></span>
<span class="line"><span style="color:#A6ACCD;">        switch(o-&gt;type) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_STRING: freeStringObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_LIST: freeListObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_SET: freeSetObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_ZSET: freeZsetObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_HASH: freeHashObject(o); break;  // \u91CA\u653E hash \u5BF9\u8C61\uFF0C\u7EE7\u7EED\u8FFD\u8E2A</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_MODULE: freeModuleObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        case OBJ_STREAM: freeStreamObject(o); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        default: serverPanic(&quot;Unknown object type&quot;); break;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        zfree(o);</span></span>
<span class="line"><span style="color:#A6ACCD;">    } else {</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (o-&gt;refcount &lt;= 0) serverPanic(&quot;decrRefCount against refcount &lt;= 0&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (o-&gt;refcount != OBJ_SHARED_REFCOUNT) o-&gt;refcount--; // \u5F15\u7528\u8BA1\u6570\u51CF 1</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u91CA\u653E hash \u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">void freeHashObject(robj *o) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    switch (o-&gt;encoding) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    case OBJ_ENCODING_HT:</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u91CA\u653E\u5B57\u5178\uFF0C\u6211\u4EEC\u7EE7\u7EED\u8FFD\u8E2A</span></span>
<span class="line"><span style="color:#A6ACCD;">        dictRelease((dict*) o-&gt;ptr);</span></span>
<span class="line"><span style="color:#A6ACCD;">        break;</span></span>
<span class="line"><span style="color:#A6ACCD;">    case OBJ_ENCODING_ZIPLIST:</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u5982\u679C\u662F\u538B\u7F29\u5217\u8868\u53EF\u4EE5\u76F4\u63A5\u91CA\u653E</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u56E0\u4E3A\u538B\u7F29\u5217\u8868\u662F\u4E00\u6574\u5757\u5B57\u8282\u6570\u7EC4</span></span>
<span class="line"><span style="color:#A6ACCD;">        zfree(o-&gt;ptr);</span></span>
<span class="line"><span style="color:#A6ACCD;">        break;</span></span>
<span class="line"><span style="color:#A6ACCD;">    default:</span></span>
<span class="line"><span style="color:#A6ACCD;">        serverPanic(&quot;Unknown hash encoding type&quot;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        break;</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u91CA\u653E\u5B57\u5178\uFF0C\u5982\u679C\u5B57\u5178\u6B63\u5728\u8FC1\u79FB\u4E2D\uFF0Cht[0] \u548C ht[1] \u5206\u522B\u5B58\u50A8\u65E7\u5B57\u5178\u548C\u65B0\u5B57\u5178</span></span>
<span class="line"><span style="color:#A6ACCD;">void dictRelease(dict *d)</span></span>
<span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    _dictClear(d,&amp;d-&gt;ht[0],NULL); // \u7EE7\u7EED\u8FFD\u8E2A</span></span>
<span class="line"><span style="color:#A6ACCD;">    _dictClear(d,&amp;d-&gt;ht[1],NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">    zfree(d);</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">// \u8FD9\u91CC\u8981\u91CA\u653E hashtable \u4E86</span></span>
<span class="line"><span style="color:#A6ACCD;">// \u9700\u8981\u904D\u5386\u7B2C\u4E00\u7EF4\u6570\u7EC4\uFF0C\u7136\u540E\u7EE7\u7EED\u904D\u5386\u7B2C\u4E8C\u7EF4\u94FE\u8868\uFF0C\u53CC\u91CD\u5FAA\u73AF</span></span>
<span class="line"><span style="color:#A6ACCD;">int _dictClear(dict *d, dictht *ht, void(callback)(void *)) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    unsigned long i;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    /* Free all the elements */</span></span>
<span class="line"><span style="color:#A6ACCD;">    for (i = 0; i &lt; ht-&gt;size &amp;&amp; ht-&gt;used &gt; 0; i++) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        dictEntry *he, *nextHe;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        if (callback &amp;&amp; (i &amp; 65535) == 0) callback(d-&gt;privdata);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        if ((he = ht-&gt;table[i]) == NULL) continue;</span></span>
<span class="line"><span style="color:#A6ACCD;">        while(he) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            nextHe = he-&gt;next;</span></span>
<span class="line"><span style="color:#A6ACCD;">            dictFreeKey(d, he); // \u5148\u91CA\u653E key</span></span>
<span class="line"><span style="color:#A6ACCD;">            dictFreeVal(d, he); // \u518D\u91CA\u653E value</span></span>
<span class="line"><span style="color:#A6ACCD;">            zfree(he); // \u6700\u540E\u91CA\u653E entry</span></span>
<span class="line"><span style="color:#A6ACCD;">            ht-&gt;used--;</span></span>
<span class="line"><span style="color:#A6ACCD;">            he = nextHe;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    /* Free the table and the allocated cache structure */</span></span>
<span class="line"><span style="color:#A6ACCD;">    zfree(ht-&gt;table); // \u53EF\u4EE5\u56DE\u6536\u7B2C\u4E00\u7EF4\u6570\u7EC4\u4E86</span></span>
<span class="line"><span style="color:#A6ACCD;">    /* Re-initialize the table */</span></span>
<span class="line"><span style="color:#A6ACCD;">    _dictReset(ht);</span></span>
<span class="line"><span style="color:#A6ACCD;">    return DICT_OK; /* never fails */</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u8FD9\u4E9B\u4EE3\u7801\u6563\u843D\u5728\u591A\u4E2A\u4E0D\u540C\u7684\u6587\u4EF6\uFF0C\u6211\u5C06\u5B83\u4EEC\u51D1\u5230\u4E86\u4E00\u5757\u4FBF\u4E8E\u8BFB\u8005\u9605\u8BFB\u3002\u4ECE\u4EE3\u7801\u4E2D\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u91CA\u653E\u4E00\u4E2A\u5BF9\u8C61\u8981\u6DF1\u5EA6\u8C03\u7528\u4E00\u7CFB\u5217\u51FD\u6570\uFF0C\u6BCF\u79CD\u5BF9\u8C61\u90FD\u6709\u5B83\u72EC\u7279\u7684\u5185\u5B58\u56DE\u6536\u903B\u8F91\u3002</p><h2 id="\u961F\u5217\u5B89\u5168" tabindex="-1">\u961F\u5217\u5B89\u5168 <a class="header-anchor" href="#\u961F\u5217\u5B89\u5168" aria-hidden="true">#</a></h2><p>\u524D\u9762\u63D0\u5230\u4EFB\u52A1\u961F\u5217\u662F\u4E00\u4E2A\u4E0D\u5B89\u5168\u7684\u53CC\u5411\u94FE\u8868\uFF0C\u9700\u8981\u4F7F\u7528\u9501\u6765\u4FDD\u62A4\u5B83\u3002\u5F53\u4E3B\u7EBF\u7A0B\u5C06\u4EFB\u52A1\u8FFD\u52A0\u5230\u961F\u5217\u4E4B\u524D\u5B83\u9700\u8981\u52A0\u9501\uFF0C\u8FFD\u52A0\u5B8C\u6BD5\u540E\uFF0C\u518D\u91CA\u653E\u9501\uFF0C\u8FD8\u9700\u8981\u5524\u9192\u5F02\u6B65\u7EBF\u7A0B\uFF0C\u5982\u679C\u5B83\u5728\u4F11\u7720\u7684\u8BDD\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">void bioCreateBackgroundJob(int type, void *arg1, void *arg2, void *arg3) {</span></span>
<span class="line"><span style="color:#A6ACCD;">    struct bio_job *job = zmalloc(sizeof(*job));</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">    job-&gt;time = time(NULL);</span></span>
<span class="line"><span style="color:#A6ACCD;">    job-&gt;arg1 = arg1;</span></span>
<span class="line"><span style="color:#A6ACCD;">    job-&gt;arg2 = arg2;</span></span>
<span class="line"><span style="color:#A6ACCD;">    job-&gt;arg3 = arg3;</span></span>
<span class="line"><span style="color:#A6ACCD;">    pthread_mutex_lock(&amp;bio_mutex[type]); // \u52A0\u9501</span></span>
<span class="line"><span style="color:#A6ACCD;">    listAddNodeTail(bio_jobs[type],job); // \u8FFD\u52A0\u4EFB\u52A1</span></span>
<span class="line"><span style="color:#A6ACCD;">    bio_pending[type]++; // \u8BA1\u6570</span></span>
<span class="line"><span style="color:#A6ACCD;">    pthread_cond_signal(&amp;bio_newjob_cond[type]); // \u5524\u9192\u5F02\u6B65\u7EBF\u7A0B</span></span>
<span class="line"><span style="color:#A6ACCD;">    pthread_mutex_unlock(&amp;bio_mutex[type]); // \u91CA\u653E\u9501</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u5F02\u6B65\u7EBF\u7A0B\u9700\u8981\u5BF9\u4EFB\u52A1\u961F\u5217\u8FDB\u884C\u8F6E\u8BAD\u5904\u7406\uFF0C\u4F9D\u6B21\u4ECE\u94FE\u8868\u8868\u5934\u6458\u53D6\u5143\u7D20\u9010\u4E2A\u5904\u7406\u3002\u6458\u53D6\u5143\u7D20\u7684\u65F6\u5019\u4E5F\u9700\u8981\u52A0\u9501\uFF0C\u6458\u51FA\u6765\u4E4B\u540E\u518D\u89E3\u9501\u3002\u5982\u679C\u4E00\u4E2A\u5143\u7D20\u90FD\u6CA1\u6709\uFF0C\u5B83\u9700\u8981\u7B49\u5F85\uFF0C\u76F4\u5230\u4E3B\u7EBF\u7A0B\u6765\u5524\u9192\u5B83\u7EE7\u7EED\u5DE5\u4F5C\u3002</p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">// \u5F02\u6B65\u7EBF\u7A0B\u6267\u884C\u903B\u8F91</span></span>
<span class="line"><span style="color:#A6ACCD;">void *bioProcessBackgroundJobs(void *arg) {</span></span>
<span class="line"><span style="color:#A6ACCD;">...</span></span>
<span class="line"><span style="color:#A6ACCD;">    pthread_mutex_lock(&amp;bio_mutex[type]); // \u5148\u52A0\u9501</span></span>
<span class="line"><span style="color:#A6ACCD;">    ...</span></span>
<span class="line"><span style="color:#A6ACCD;">    // \u5FAA\u73AF\u5904\u7406</span></span>
<span class="line"><span style="color:#A6ACCD;">    while(1) {</span></span>
<span class="line"><span style="color:#A6ACCD;">        listNode *ln;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        /* The loop always starts with the lock hold. */</span></span>
<span class="line"><span style="color:#A6ACCD;">        if (listLength(bio_jobs[type]) == 0) {</span></span>
<span class="line"><span style="color:#A6ACCD;">            // \u5BF9\u5217\u7A7A\uFF0C\u90A3\u5C31\u7761\u89C9\u5427</span></span>
<span class="line"><span style="color:#A6ACCD;">            pthread_cond_wait(&amp;bio_newjob_cond[type],&amp;bio_mutex[type]);</span></span>
<span class="line"><span style="color:#A6ACCD;">            continue;</span></span>
<span class="line"><span style="color:#A6ACCD;">        }</span></span>
<span class="line"><span style="color:#A6ACCD;">        /* Pop the job from the queue. */</span></span>
<span class="line"><span style="color:#A6ACCD;">        ln = listFirst(bio_jobs[type]); // \u83B7\u53D6\u961F\u5217\u5934\u5143\u7D20</span></span>
<span class="line"><span style="color:#A6ACCD;">        job = ln-&gt;value;</span></span>
<span class="line"><span style="color:#A6ACCD;">        /* It is now possible to unlock the background system as we know have</span></span>
<span class="line"><span style="color:#A6ACCD;">         * a stand alone job structure to process.*/</span></span>
<span class="line"><span style="color:#A6ACCD;">        pthread_mutex_unlock(&amp;bio_mutex[type]); // \u91CA\u653E\u9501</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u8FD9\u91CC\u662F\u5904\u7406\u8FC7\u7A0B\uFF0C\u4E3A\u4E86\u7701\u7EB8\uFF0C\u5C31\u7565\u53BB\u4E86</span></span>
<span class="line"><span style="color:#A6ACCD;">        ...</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u91CA\u653E\u4EFB\u52A1\u5BF9\u8C61</span></span>
<span class="line"><span style="color:#A6ACCD;">        zfree(job);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">        ...</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u518D\u6B21\u52A0\u9501\u7EE7\u7EED\u5904\u7406\u4E0B\u4E00\u4E2A\u5143\u7D20</span></span>
<span class="line"><span style="color:#A6ACCD;">        pthread_mutex_lock(&amp;bio_mutex[type]);</span></span>
<span class="line"><span style="color:#A6ACCD;">        // \u56E0\u4E3A\u4EFB\u52A1\u5DF2\u7ECF\u5904\u7406\u5B8C\u4E86\uFF0C\u53EF\u4EE5\u653E\u5FC3\u4ECE\u94FE\u8868\u4E2D\u5220\u9664\u8282\u70B9\u4E86</span></span>
<span class="line"><span style="color:#A6ACCD;">        listDelNode(bio_jobs[type],ln);</span></span>
<span class="line"><span style="color:#A6ACCD;">        bio_pending[type]--; // \u8BA1\u6570\u51CF 1</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>\u7814\u7A76\u5B8C\u8FD9\u4E9B\u52A0\u9501\u89E3\u9501\u7684\u4EE3\u7801\u540E\uFF0C\u6211\u5F00\u59CB\u6709\u70B9\u5F53\u5FC3\u4E3B\u7EBF\u7A0B\u7684\u6027\u80FD\u3002\u6211\u4EEC\u90FD\u77E5\u9053\u52A0\u9501\u89E3\u9501\u662F\u4E00\u4E2A\u76F8\u5BF9\u6BD4\u8F83\u8017\u65F6\u7684\u64CD\u4F5C\uFF0C\u5C24\u5176\u662F\u60B2\u89C2\u9501\u6700\u4E3A\u8017\u65F6\u3002\u5982\u679C\u5220\u9664\u5F88\u9891\u7E41\uFF0C\u4E3B\u7EBF\u7A0B\u5C82\u4E0D\u662F\u8981\u9891\u7E41\u52A0\u9501\u89E3\u9501\u3002\u6240\u4EE5\u8FD9\u91CC\u80AF\u5B9A\u8FD8\u6709\u4F18\u5316\u7A7A\u95F4\uFF0CJava \u7684 ConcurrentLinkQueue \u5C31\u6CA1\u6709\u4F7F\u7528\u8FD9\u6837\u7C97\u7C92\u5EA6\u7684\u60B2\u89C2\u9501\uFF0C\u5B83\u4F18\u5148\u4F7F\u7528 cas \u6765\u63A7\u5236\u5E76\u53D1\u3002</p><h2 id="\u601D\u8003" tabindex="-1">\u601D\u8003 <a class="header-anchor" href="#\u601D\u8003" aria-hidden="true">#</a></h2><ol><li>Redis \u8FD8\u6709\u5176\u5B83\u5730\u65B9\u7528\u5230\u4E86\u5BF9\u8C61\u5171\u4EAB\u673A\u5236\u4E48\uFF1F</li><li>Java \u7684 ConcurrentLinkQueue \u5177\u4F53\u662F\u5982\u4F55\u5B9E\u73B0\u7684\uFF1F</li></ol>`,38),o=[e];function c(t,r,i,C,A,y){return a(),n("div",null,o)}const h=s(p,[["render",c]]);export{D as __pageData,h as default};
